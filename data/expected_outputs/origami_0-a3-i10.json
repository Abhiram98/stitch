{
  "cmd": "target/release/compress -a3 -i10 --fmt=dreamcoder --out=data/expected_outputs/origami_0-a3-i10.json data/dc/origami/iteration_0_3.json",
  "args": {
    "file": "data/dc/origami/iteration_0_3.json",
    "out": "data/expected_outputs/origami_0-a3-i10.json",
    "iterations": 10,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "args_from_json": false,
    "save_rewritten": null,
    "step": {
      "max_arity": 3,
      "threads": 1,
      "batch": 1,
      "dynamic_batch": false,
      "refine": false,
      "max_refinement_size": null,
      "max_refinement_arity": 1,
      "inv_candidates": 1,
      "hole_choice": "DepthFirst",
      "no_mismatch_check": false,
      "no_top_lambda": false,
      "track": null,
      "track_refined": null,
      "follow_track": false,
      "verbose_worklist": false,
      "verbose_best": false,
      "print_stats": 0,
      "dreamcoder_drop_last": false,
      "no_cache": false,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_opt_arity_zero": false,
      "no_stats": false,
      "no_other_util": false,
      "rewrite_check": false,
      "utility_by_rewrite": false,
      "dreamcoder_comparison": false
    }
  },
  "original_cost": 70899,
  "original": [
    "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) 1))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ 1 ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1)))))",
    "(lam (fix1 $0 (lam (lam (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
    "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1))))))))",
    "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
    "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty)))))",
    "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty)))))",
    "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ $0 1))))))))",
    "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty)))))",
    "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty)))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) $0 (cons (car $0) ($1 (cdr (cdr $0)))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) (cdr $0) (cons (car $0) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0))))))))))",
    "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0))))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) $0 (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))))",
    "(lam (fix1 $0 (lam (lam (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0)))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ (car $0) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0)))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons 0 empty) (cons (car $0) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons (- 1 1) empty) (cons (car $0) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) $0 (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) $0 (cons (+ (car $0) 1) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) $0 (cons (+ 1 (car $0)) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) $0 (cons (- 0 (car $0)) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0))))))))",
    "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0))))))))"
  ],
  "invs": [
    {
      "body": "(if (empty? #2) #2 (cons #1 #0))",
      "dreamcoder": "#(lambda (lambda (lambda (if (empty? $0) $0 (cons $1 $2)))))",
      "arity": 3,
      "name": "fn_0",
      "rewritten": [
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) 1))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ 1 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1)))))",
        "(lam (fix1 $0 (lam (lam (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
        "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1))))))))",
        "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
        "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ $0 1))))))))",
        "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr (cdr $0))) (car $0) $0)))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (car $0) (cdr $0))))))",
        "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0)))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0)))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons 0 empty) (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons (- 1 1) empty) (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0)))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ 1 (car $0)) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (- 0 (car $0)) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0))))))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) 1))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ 1 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1)))))",
        "(lambda (fix1 $0 (lambda (lambda (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ $0 1))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (#(lambda (lambda (lambda (if (empty? $0) $0 (cons $1 $2))))) ($1 (cdr (cdr $0))) (car $0) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (#(lambda (lambda (lambda (if (empty? $0) $0 (cons $1 $2))))) ($1 (cdr $0)) (car $0) (cdr $0))))))",
        "(lambda (fix1 $0 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (#(lambda (lambda (lambda (if (empty? $0) $0 (cons $1 $2))))) (cons (car $0) ($1 (cdr $0))) (car $0) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0)))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0)))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) (cons 0 empty) (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) (cons (- 1 1) empty) (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (#(lambda (lambda (lambda (if (empty? $0) $0 (cons $1 $2))))) ($1 (cdr $0)) (+ (car $0) (car $0)) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (#(lambda (lambda (lambda (if (empty? $0) $0 (cons $1 $2))))) ($1 (cdr $0)) (+ (car $0) 1) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (#(lambda (lambda (lambda (if (empty? $0) $0 (cons $1 $2))))) ($1 (cdr $0)) (+ 1 (car $0)) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (#(lambda (lambda (lambda (if (empty? $0) $0 (cons $1 $2))))) ($1 (cdr $0)) (- 0 (car $0)) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0))))))))"
      ],
      "utility": 1512,
      "expected_cost": 13455,
      "final_cost": 13455,
      "multiplier": 1.1351170568561872,
      "multiplier_wrt_orig": 1.1351170568561872,
      "num_uses": 7,
      "uses": [
        {
          "fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0": "(if (empty? $0) $0 (cons (+ (car $0) (car $0)) ($1 (cdr $0))))"
        },
        {
          "fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0": "(if (empty? $0) $0 (cons (+ (car $0) 1) ($1 (cdr $0))))"
        },
        {
          "fn_0 ($1 (cdr $0)) (+ 1 (car $0)) $0": "(if (empty? $0) $0 (cons (+ 1 (car $0)) ($1 (cdr $0))))"
        },
        {
          "fn_0 ($1 (cdr $0)) (- 0 (car $0)) $0": "(if (empty? $0) $0 (cons (- 0 (car $0)) ($1 (cdr $0))))"
        },
        {
          "fn_0 ($1 (cdr (cdr $0))) (car $0) $0": "(if (empty? $0) $0 (cons (car $0) ($1 (cdr (cdr $0)))))"
        },
        {
          "fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0": "(if (empty? $0) $0 (cons (car $0) (cons (car $0) ($1 (cdr $0)))))"
        },
        {
          "fn_0 ($1 (cdr $0)) (car $0) (cdr $0)": "(if (empty? (cdr $0)) (cdr $0) (cons (car $0) ($1 (cdr $0))))"
        }
      ]
    },
    {
      "body": "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (#1 $0) ($1 (#0 $0 1))))))))",
      "dreamcoder": "#(lambda (lambda (lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons ($3 $0) ($1 ($4 $0 1))))))))))",
      "arity": 2,
      "name": "fn_1",
      "rewritten": [
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) 1))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ 1 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1)))))",
        "(lam (fix1 $0 (lam (lam (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
        "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1))))))))",
        "(fn_1 - (+ 1))",
        "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(fn_1 + (- 0))",
        "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr (cdr $0))) (car $0) $0)))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (car $0) (cdr $0))))))",
        "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0)))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0)))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons 0 empty) (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons (- 1 1) empty) (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0)))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ 1 (car $0)) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (- 0 (car $0)) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0))))))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) 1))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ 1 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1)))))",
        "(lambda (fix1 $0 (lambda (lambda (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1))))))))",
        "(#(lambda (lambda (lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons ($3 $0) ($1 ($4 $0 1)))))))))) - (+ 1))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(#(lambda (lambda (lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons ($3 $0) ($1 ($4 $0 1)))))))))) + (- 0))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr (cdr $0))) (car $0) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (car $0) (cdr $0))))))",
        "(lambda (fix1 $0 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0)))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0)))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) (cons 0 empty) (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) (cons (- 1 1) empty) (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ 1 (car $0)) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (- 0 (car $0)) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0))))))))"
      ],
      "utility": 1012,
      "expected_cost": 11227,
      "final_cost": 11227,
      "multiplier": 1.1984501647813308,
      "multiplier_wrt_orig": 1.3603812238353967,
      "num_uses": 2,
      "uses": [
        {
          "fn_1 - (+ 1)": "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))"
        },
        {
          "fn_1 + (- 0)": "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ $0 1))))))))"
        }
      ]
    },
    {
      "body": "(lam (fix1 $0 (lam (lam (if (empty? $0) #1 (#0 (car $0) ($1 (cdr $0))))))))",
      "dreamcoder": "#(lambda (lambda (lambda (fix1 $0 (lambda (lambda (if (empty? $0) $3 ($4 (car $0) ($1 (cdr $0))))))))))",
      "arity": 2,
      "name": "fn_2",
      "rewritten": [
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) 1))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ 1 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1)))))",
        "(lam (fix1 $0 (lam (lam (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
        "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1))))))))",
        "(fn_1 - (+ 1))",
        "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(fn_1 + (- 0))",
        "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr (cdr $0))) (car $0) $0)))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (car $0) (cdr $0))))))",
        "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0)))))))",
        "(fn_2 + 0)",
        "(lam (fix1 $0 (lam (lam (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0)))))))",
        "(fn_2 cons (cons 0 empty))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0))))))))",
        "(fn_2 cons (cons (- 1 1) empty))",
        "(lam (fix1 $0 (lam (lam (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0)))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ 1 (car $0)) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (- 0 (car $0)) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0))))))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) 1))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ 1 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1)))))",
        "(lambda (fix1 $0 (lambda (lambda (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1))))))))",
        "(fn_1 - (+ 1))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(fn_1 + (- 0))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr (cdr $0))) (car $0) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (car $0) (cdr $0))))))",
        "(lambda (fix1 $0 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0)))))))",
        "(#(lambda (lambda (lambda (fix1 $0 (lambda (lambda (if (empty? $0) $3 ($4 (car $0) ($1 (cdr $0)))))))))) + 0)",
        "(lambda (fix1 $0 (lambda (lambda (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0)))))))",
        "(#(lambda (lambda (lambda (fix1 $0 (lambda (lambda (if (empty? $0) $3 ($4 (car $0) ($1 (cdr $0)))))))))) cons (cons 0 empty))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0))))))))",
        "(#(lambda (lambda (lambda (fix1 $0 (lambda (lambda (if (empty? $0) $3 ($4 (car $0) ($1 (cdr $0)))))))))) cons (cons (- 1 1) empty))",
        "(lambda (fix1 $0 (lambda (lambda (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ 1 (car $0)) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (- 0 (car $0)) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0))))))))"
      ],
      "utility": 810,
      "expected_cost": 9403,
      "final_cost": 9403,
      "multiplier": 1.1939806444751675,
      "multiplier_wrt_orig": 1.6242688503669043,
      "num_uses": 4,
      "uses": [
        {
          "fn_2 cons (cons (- 1 1) empty)": "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons (- 1 1) empty) (cons (car $0) ($1 (cdr $0))))))))"
        },
        {
          "fn_2 cons (cons 0 #0)": "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))))"
        },
        {
          "fn_2 cons (cons 0 empty)": "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons 0 empty) (cons (car $0) ($1 (cdr $0))))))))"
        },
        {
          "fn_2 + 0": "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ (car $0) ($1 (cdr $0))))))))"
        }
      ]
    },
    {
      "body": "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (#0 (car $0)) $0)))))",
      "dreamcoder": "#(lambda (lambda (fix1 $0 (lambda (lambda (#(lambda (lambda (lambda (if (empty? $0) $0 (cons $1 $2))))) ($1 (cdr $0)) ($3 (car $0)) $0))))))",
      "arity": 1,
      "name": "fn_3",
      "rewritten": [
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) 1))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ 1 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1)))))",
        "(lam (fix1 $0 (lam (lam (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
        "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1))))))))",
        "(fn_1 - (+ 1))",
        "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(fn_1 + (- 0))",
        "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty)))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr (cdr $0))) (car $0) $0)))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (car $0) (cdr $0))))))",
        "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0)))))))",
        "(fn_2 + 0)",
        "(lam (fix1 $0 (lam (lam (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0)))))))",
        "(fn_2 cons (cons 0 empty))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0))))))))",
        "(fn_2 cons (cons (- 1 1) empty))",
        "(lam (fix1 $0 (lam (lam (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0)))))",
        "(lam (fix1 $0 (lam (lam (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0)))))",
        "(fn_3 (+ 1))",
        "(lam (fix1 $0 (lam (lam (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0))))))))",
        "(fn_3 (- 0))",
        "(lam (fix1 $0 (lam (lam (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0))))))))",
        "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0))))))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) 1))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ 1 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1)))))",
        "(lambda (fix1 $0 (lambda (lambda (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1))))))))",
        "(fn_1 - (+ 1))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(fn_1 + (- 0))",
        "(lambda (fix1 $0 (lambda (lambda (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr (cdr $0))) (car $0) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (car $0) (cdr $0))))))",
        "(lambda (fix1 $0 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0))))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0)))))))",
        "(fn_2 + 0)",
        "(lambda (fix1 $0 (lambda (lambda (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0)))))))",
        "(fn_2 cons (cons 0 empty))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0))))))))",
        "(fn_2 cons (cons (- 1 1) empty))",
        "(lambda (fix1 $0 (lambda (lambda (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0)))))",
        "(lambda (fix1 $0 (lambda (lambda (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0)))))",
        "(#(lambda (lambda (fix1 $0 (lambda (lambda (#(lambda (lambda (lambda (if (empty? $0) $0 (cons $1 $2))))) ($1 (cdr $0)) ($3 (car $0)) $0)))))) (+ 1))",
        "(lambda (fix1 $0 (lambda (lambda (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0))))))))",
        "(#(lambda (lambda (fix1 $0 (lambda (lambda (#(lambda (lambda (lambda (if (empty? $0) $0 (cons $1 $2))))) ($1 (cdr $0)) ($3 (car $0)) $0)))))) (- 0))",
        "(lambda (fix1 $0 (lambda (lambda (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0))))))))",
        "(lambda (fix1 $0 (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0))))))))"
      ],
      "utility": 710,
      "expected_cost": 7781,
      "final_cost": 7781,
      "multiplier": 1.2084564965942681,
      "multiplier_wrt_orig": 1.9628582444415885,
      "num_uses": 3,
      "uses": [
        {
          "fn_3 (+ (car #0))": "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0)))))"
        },
        {
          "fn_3 (+ 1)": "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ 1 (car $0)) $0)))))"
        },
        {
          "fn_3 (- 0)": "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (- 0 (car $0)) $0)))))"
        }
      ]
    },
    {
      "body": "(lam (fix1 $0 #0))",
      "dreamcoder": "#(lambda (lambda (fix1 $0 $1)))",
      "arity": 1,
      "name": "fn_4",
      "rewritten": [
        "(fn_4 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) 1)))))",
        "(fn_4 (lam (lam (if (empty? $0) 0 (+ 1 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1))))",
        "(fn_4 (lam (lam (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1)))))))",
        "(fn_4 (lam (lam (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1)))))))",
        "(fn_1 - (+ 1))",
        "(fn_4 (lam (lam (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty))))",
        "(fn_4 (lam (lam (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty))))",
        "(fn_4 (lam (lam (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0)))))))",
        "(fn_1 + (- 0))",
        "(fn_4 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0)))))))",
        "(fn_4 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty))))",
        "(fn_4 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr (cdr $0))) (car $0) $0))))",
        "(fn_4 (lam (lam (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (car $0) (cdr $0)))))",
        "(fn_4 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(fn_4 (lam (lam (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0))))",
        "(fn_4 (lam (lam (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(fn_4 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 + 0)",
        "(fn_4 (lam (lam (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0)))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 cons (cons 0 empty))",
        "(fn_4 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0)))))))",
        "(fn_2 cons (cons (- 1 1) empty))",
        "(fn_4 (lam (lam (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0))))",
        "(fn_4 (lam (lam (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0))))",
        "(fn_3 (+ 1))",
        "(fn_4 (lam (lam (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0)))))))",
        "(fn_3 (- 0))",
        "(fn_4 (lam (lam (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0)))))))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) 1)))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) 0 (+ 1 ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1)))))))",
        "(fn_1 - (+ 1))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0)))))))",
        "(fn_1 + (- 0))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (fn_0 ($1 (cdr (cdr $0))) (car $0) $0))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (fn_0 ($1 (cdr $0)) (car $0) (cdr $0)))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0)))))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0)))))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 + 0)",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0)))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 cons (cons 0 empty))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0)))))))",
        "(fn_2 cons (cons (- 1 1) empty))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0))))",
        "(fn_3 (+ 1))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0)))))))",
        "(fn_3 (- 0))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0)))))))",
        "(#(lambda (lambda (fix1 $0 $1))) (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0)))))))"
      ],
      "utility": 307,
      "expected_cost": 7271,
      "final_cost": 7271,
      "multiplier": 1.0701416586439279,
      "multiplier_wrt_orig": 2.10053637738963,
      "num_uses": 42,
      "uses": [
        {
          "fn_4 (lam (lam (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0))))": "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0))))))"
        },
        {
          "fn_4 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1)))": "(lam (fix1 $0 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1)))))"
        },
        {
          "fn_4 (lam (lam (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (+ 1 (if (empty? (cdr $0)) 0 ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0))))))))": "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0))))))))))"
        },
        {
          "fn_4 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0))))))))": "(lam (fix1 $0 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0))))))))))"
        },
        {
          "fn_4 (lam (lam (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))": "(lam (fix1 $0 (lam (lam (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))))"
        },
        {
          "fn_4 (lam (lam (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0)))": "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0)))))"
        },
        {
          "fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0)))": "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0)))))"
        },
        {
          "fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (car $0) (cdr $0))))": "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr $0)) (car $0) (cdr $0))))))"
        },
        {
          "fn_4 (lam (lam (fn_0 ($1 (cdr (cdr $0))) (car $0) $0)))": "(lam (fix1 $0 (lam (lam (fn_0 ($1 (cdr (cdr $0))) (car $0) $0)))))"
        },
        {
          "fn_4 (lam (lam (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0)))": "(lam (fix1 $0 (lam (lam (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0)))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0)))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0)))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) 1))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) 1))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) 0 (+ 1 ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) 0 (+ 1 ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (+ 1 (car $0)) ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (- 1 (+ 1 (car $0))) ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0)))))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))": "(lam (fix1 $0 (lam (lam (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0)))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0)))))": "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0)))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) 1 (+ 1 ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0))))))": "(lam (fix1 $0 (lam (lam (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0)))))))": "(lam (fix1 $0 (lam (lam (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0)))))))))"
        },
        {
          "fn_4 (lam (lam (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1))))))": "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (+ 1 $0) ($1 (- $0 1))))))))"
        },
        {
          "fn_4 (lam (lam (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))": "(lam (fix1 $0 (lam (lam (if (eq? $0 0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1))))))": "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1))))))))"
        },
        {
          "fn_4 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))": "(lam (fix1 $0 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (+ 1 $0))))))))"
        },
        {
          "fn_4 (lam (lam (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty)))": "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty)))))"
        },
        {
          "fn_4 (lam (lam (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty)))": "(lam (fix1 $0 (lam (lam (if (gt? $0 0) (cons (+ 1 $0) ($1 (- $0 1))) empty)))))"
        },
        {
          "fn_4 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty)))": "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty)))))"
        },
        {
          "fn_4 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty)))": "(lam (fix1 $0 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ 1 $0))) empty)))))"
        }
      ]
    },
    {
      "body": "(+ 1)",
      "dreamcoder": "#(+ 1)",
      "arity": 0,
      "name": "fn_5",
      "rewritten": [
        "(fn_4 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) 1)))))",
        "(fn_4 (lam (lam (if (empty? $0) 0 (fn_5 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1))))",
        "(fn_4 (lam (lam (fn_5 (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) 1 (fn_5 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (eq? $0 0) empty (cons (fn_5 $0) ($1 (- $0 1)))))))",
        "(fn_4 (lam (lam (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1)))))))",
        "(fn_1 - fn_5)",
        "(fn_4 (lam (lam (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty))))",
        "(fn_4 (lam (lam (if (gt? $0 0) (cons (fn_5 $0) ($1 (- $0 1))) empty))))",
        "(fn_4 (lam (lam (if (eq? $0 0) empty (cons (- 0 $0) ($1 (fn_5 $0)))))))",
        "(fn_1 + (- 0))",
        "(fn_4 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (fn_5 $0)))))))",
        "(fn_4 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty))))",
        "(fn_4 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (fn_5 $0))) empty))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr (cdr $0))) (car $0) $0))))",
        "(fn_4 (lam (lam (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (car $0) (cdr $0)))))",
        "(fn_4 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(fn_4 (lam (lam (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0))))",
        "(fn_4 (lam (lam (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(fn_4 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 + 0)",
        "(fn_4 (lam (lam (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0)))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 cons (cons 0 empty))",
        "(fn_4 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0)))))))",
        "(fn_2 cons (cons (- 1 1) empty))",
        "(fn_4 (lam (lam (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0))))",
        "(fn_4 (lam (lam (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (fn_5 (car $0)) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0))))",
        "(fn_3 fn_5)",
        "(fn_4 (lam (lam (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0)))))))",
        "(fn_3 (- 0))",
        "(fn_4 (lam (lam (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (- 1 (fn_5 (car $0))) ($1 (cdr $0)))))))"
      ],
      "rewritten_dreamcoder": [
        "(fn_4 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) 1)))))",
        "(fn_4 (lambda (lambda (if (empty? $0) 0 (#(+ 1) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1))))",
        "(fn_4 (lambda (lambda (#(+ 1) (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? (cdr $0)) 1 (#(+ 1) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (eq? $0 0) empty (cons (#(+ 1) $0) ($1 (- $0 1)))))))",
        "(fn_4 (lambda (lambda (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1)))))))",
        "(fn_1 - #(+ 1))",
        "(fn_4 (lambda (lambda (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty))))",
        "(fn_4 (lambda (lambda (if (gt? $0 0) (cons (#(+ 1) $0) ($1 (- $0 1))) empty))))",
        "(fn_4 (lambda (lambda (if (eq? $0 0) empty (cons (- 0 $0) ($1 (#(+ 1) $0)))))))",
        "(fn_1 + (- 0))",
        "(fn_4 (lambda (lambda (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (#(+ 1) $0)))))))",
        "(fn_4 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty))))",
        "(fn_4 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (#(+ 1) $0))) empty))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr (cdr $0))) (car $0) $0))))",
        "(fn_4 (lambda (lambda (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lambda (lambda (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr $0)) (car $0) (cdr $0)))))",
        "(fn_4 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(fn_4 (lambda (lambda (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0))))",
        "(fn_4 (lambda (lambda (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 + 0)",
        "(fn_4 (lambda (lambda (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0)))))",
        "(fn_4 (lambda (lambda (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 cons (cons 0 empty))",
        "(fn_4 (lambda (lambda (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0)))))))",
        "(fn_2 cons (cons (- 1 1) empty))",
        "(fn_4 (lambda (lambda (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) (car $0)) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) (car $0)) $0))))",
        "(fn_4 (lambda (lambda (cons (+ (car $0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (#(+ 1) (car $0)) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0))))",
        "(fn_3 #(+ 1))",
        "(fn_4 (lambda (lambda (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0)))))))",
        "(fn_3 (- 0))",
        "(fn_4 (lambda (lambda (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (- 1 (#(+ 1) (car $0))) ($1 (cdr $0)))))))"
      ],
      "utility": 102,
      "expected_cost": 6968,
      "final_cost": 6968,
      "multiplier": 1.0434845005740527,
      "multiplier_wrt_orig": 2.1918771526980483,
      "num_uses": 12,
      "uses": [
        {
          "fn_5 ": "(+ 1)"
        }
      ]
    },
    {
      "body": "(#1 #0 #0)",
      "dreamcoder": "#(lambda (lambda ($0 $1 $1)))",
      "arity": 2,
      "name": "fn_6",
      "rewritten": [
        "(fn_4 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) 1)))))",
        "(fn_4 (lam (lam (if (empty? $0) 0 (fn_5 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1))))",
        "(fn_4 (lam (lam (fn_5 (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) 1 (fn_5 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (eq? $0 0) empty (cons (fn_5 $0) ($1 (- $0 1)))))))",
        "(fn_4 (lam (lam (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1)))))))",
        "(fn_1 - fn_5)",
        "(fn_4 (lam (lam (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty))))",
        "(fn_4 (lam (lam (if (gt? $0 0) (cons (fn_5 $0) ($1 (- $0 1))) empty))))",
        "(fn_4 (lam (lam (if (eq? $0 0) empty (cons (- 0 $0) ($1 (fn_5 $0)))))))",
        "(fn_1 + (- 0))",
        "(fn_4 (lam (lam (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (fn_5 $0)))))))",
        "(fn_4 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty))))",
        "(fn_4 (lam (lam (if (gt? 0 $0) (cons (- 0 $0) ($1 (fn_5 $0))) empty))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr (cdr $0))) (car $0) $0))))",
        "(fn_4 (lam (lam (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (car $0) (cdr $0)))))",
        "(fn_4 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(fn_4 (lam (lam (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0))))",
        "(fn_4 (lam (lam (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(fn_4 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 + 0)",
        "(fn_4 (lam (lam (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0)))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 cons (cons 0 empty))",
        "(fn_4 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0)))))))",
        "(fn_2 cons (cons (- 1 1) empty))",
        "(fn_4 (lam (lam (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (fn_6 (car $0) +) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (fn_6 (car $0) +) $0))))",
        "(fn_4 (lam (lam (cons (fn_6 (car $0) +) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (fn_5 (car $0)) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0))))",
        "(fn_3 fn_5)",
        "(fn_4 (lam (lam (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0)))))))",
        "(fn_3 (- 0))",
        "(fn_4 (lam (lam (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (- 1 (fn_5 (car $0))) ($1 (cdr $0)))))))"
      ],
      "rewritten_dreamcoder": [
        "(fn_4 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) 1)))))",
        "(fn_4 (lambda (lambda (if (empty? $0) 0 (fn_5 ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1))))",
        "(fn_4 (lambda (lambda (fn_5 (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? (cdr $0)) 1 (fn_5 ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (eq? $0 0) empty (cons (fn_5 $0) ($1 (- $0 1)))))))",
        "(fn_4 (lambda (lambda (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1)))))))",
        "(fn_1 - fn_5)",
        "(fn_4 (lambda (lambda (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty))))",
        "(fn_4 (lambda (lambda (if (gt? $0 0) (cons (fn_5 $0) ($1 (- $0 1))) empty))))",
        "(fn_4 (lambda (lambda (if (eq? $0 0) empty (cons (- 0 $0) ($1 (fn_5 $0)))))))",
        "(fn_1 + (- 0))",
        "(fn_4 (lambda (lambda (if (eq? 0 $0) empty (cons (- 0 $0) ($1 (fn_5 $0)))))))",
        "(fn_4 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (+ $0 1))) empty))))",
        "(fn_4 (lambda (lambda (if (gt? 0 $0) (cons (- 0 $0) ($1 (fn_5 $0))) empty))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr (cdr $0))) (car $0) $0))))",
        "(fn_4 (lambda (lambda (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lambda (lambda (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr $0)) (car $0) (cdr $0)))))",
        "(fn_4 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(fn_4 (lambda (lambda (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0))))",
        "(fn_4 (lambda (lambda (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 + 0)",
        "(fn_4 (lambda (lambda (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0)))))",
        "(fn_4 (lambda (lambda (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 cons (cons 0 empty))",
        "(fn_4 (lambda (lambda (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0)))))))",
        "(fn_2 cons (cons (- 1 1) empty))",
        "(fn_4 (lambda (lambda (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (#(lambda (lambda ($0 $1 $1))) (car $0) +) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr $0)) (#(lambda (lambda ($0 $1 $1))) (car $0) +) $0))))",
        "(fn_4 (lambda (lambda (cons (#(lambda (lambda ($0 $1 $1))) (car $0) +) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (fn_5 (car $0)) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0))))",
        "(fn_3 fn_5)",
        "(fn_4 (lambda (lambda (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (- 0 (car $0)) ($1 (cdr $0)))))))",
        "(fn_3 (- 0))",
        "(fn_4 (lambda (lambda (cons (- 0 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (- 1 (fn_5 (car $0))) ($1 (cdr $0)))))))"
      ],
      "utility": 99,
      "expected_cost": 6867,
      "final_cost": 6867,
      "multiplier": 1.0147080238823358,
      "multiplier_wrt_orig": 2.2241153342070774,
      "num_uses": 4,
      "uses": [
        {
          "fn_6 (car $0) +": "(+ (car $0) (car $0))"
        },
        {
          "fn_6 1 -": "(- 1 1)"
        }
      ]
    },
    {
      "body": "(- 0)",
      "dreamcoder": "#(- 0)",
      "arity": 0,
      "name": "fn_7",
      "rewritten": [
        "(fn_4 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) 1)))))",
        "(fn_4 (lam (lam (if (empty? $0) 0 (fn_5 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1))))",
        "(fn_4 (lam (lam (fn_5 (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) 1 (fn_5 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (eq? $0 0) empty (cons (fn_5 $0) ($1 (- $0 1)))))))",
        "(fn_4 (lam (lam (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1)))))))",
        "(fn_1 - fn_5)",
        "(fn_4 (lam (lam (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty))))",
        "(fn_4 (lam (lam (if (gt? $0 0) (cons (fn_5 $0) ($1 (- $0 1))) empty))))",
        "(fn_4 (lam (lam (if (eq? $0 0) empty (cons (fn_7 $0) ($1 (fn_5 $0)))))))",
        "(fn_1 + fn_7)",
        "(fn_4 (lam (lam (if (eq? 0 $0) empty (cons (fn_7 $0) ($1 (fn_5 $0)))))))",
        "(fn_4 (lam (lam (if (gt? 0 $0) (cons (fn_7 $0) ($1 (+ $0 1))) empty))))",
        "(fn_4 (lam (lam (if (gt? 0 $0) (cons (fn_7 $0) ($1 (fn_5 $0))) empty))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr (cdr $0))) (car $0) $0))))",
        "(fn_4 (lam (lam (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (car $0) (cdr $0)))))",
        "(fn_4 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lam (lam (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(fn_4 (lam (lam (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0))))",
        "(fn_4 (lam (lam (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(fn_4 (lam (lam (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 + 0)",
        "(fn_4 (lam (lam (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0)))))",
        "(fn_4 (lam (lam (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 cons (cons 0 empty))",
        "(fn_4 (lam (lam (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0)))))))",
        "(fn_2 cons (cons (- 1 1) empty))",
        "(fn_4 (lam (lam (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (fn_6 (car $0) +) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (fn_6 (car $0) +) $0))))",
        "(fn_4 (lam (lam (cons (fn_6 (car $0) +) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (fn_5 (car $0)) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0))))",
        "(fn_3 fn_5)",
        "(fn_4 (lam (lam (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (fn_7 (car $0)) ($1 (cdr $0)))))))",
        "(fn_3 fn_7)",
        "(fn_4 (lam (lam (cons (fn_7 (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0)))))))",
        "(fn_4 (lam (lam (if (empty? $0) empty (cons (- 1 (fn_5 (car $0))) ($1 (cdr $0)))))))"
      ],
      "rewritten_dreamcoder": [
        "(fn_4 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) 1)))))",
        "(fn_4 (lambda (lambda (if (empty? $0) 0 (fn_5 ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) 1))))",
        "(fn_4 (lambda (lambda (fn_5 (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? (cdr $0)) 1 (fn_5 ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (eq? $0 0) empty (cons (fn_5 $0) ($1 (- $0 1)))))))",
        "(fn_4 (lambda (lambda (if (eq? 0 $0) empty (cons (+ $0 1) ($1 (- $0 1)))))))",
        "(fn_1 - fn_5)",
        "(fn_4 (lambda (lambda (if (gt? $0 0) (cons (+ $0 1) ($1 (- $0 1))) empty))))",
        "(fn_4 (lambda (lambda (if (gt? $0 0) (cons (fn_5 $0) ($1 (- $0 1))) empty))))",
        "(fn_4 (lambda (lambda (if (eq? $0 0) empty (cons (#(- 0) $0) ($1 (fn_5 $0)))))))",
        "(fn_1 + #(- 0))",
        "(fn_4 (lambda (lambda (if (eq? 0 $0) empty (cons (#(- 0) $0) ($1 (fn_5 $0)))))))",
        "(fn_4 (lambda (lambda (if (gt? 0 $0) (cons (#(- 0) $0) ($1 (+ $0 1))) empty))))",
        "(fn_4 (lambda (lambda (if (gt? 0 $0) (cons (#(- 0) $0) ($1 (fn_5 $0))) empty))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr (cdr $0))) (car $0) $0))))",
        "(fn_4 (lambda (lambda (if (empty? (if (empty? $0) empty $0)) empty (cons (car $0) ($1 (cdr (cdr $0))))))))",
        "(fn_4 (lambda (lambda (if (empty? (cdr $0)) empty (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (cons (car $0) (if (empty? (cdr (cdr $0))) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr $0)) (car $0) (cdr $0)))))",
        "(fn_4 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 0 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lambda (lambda (cdr (if (empty? (cdr $0)) $0 (cons 1 (cons (car $0) ($1 (cdr $0)))))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (car $0) (cons (car $0) ($1 (cdr $0))))))))",
        "(fn_4 (lambda (lambda (fn_0 (cons (car $0) ($1 (cdr $0))) (car $0) $0))))",
        "(fn_4 (lambda (lambda (cons (car $0) (cons (car $0) (if (empty? (cdr $0)) empty ($1 (cdr $0))))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) 0 (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 + 0)",
        "(fn_4 (lambda (lambda (+ (car $0) (if (empty? (cdr $0)) 0 ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (+ (if (empty? (cdr $0)) 0 ($1 (cdr $0))) (car $0)))))",
        "(fn_4 (lambda (lambda (if (empty? (cdr $0)) (car $0) (+ ($1 (cdr $0)) (car $0))))))",
        "(fn_2 cons (cons 0 empty))",
        "(fn_4 (lambda (lambda (if (empty? $0) (cons 0 $0) (cons (car $0) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (cons (car $0) (if (empty? (cdr $0)) (cons 0 empty) ($1 (cdr $0)))))))",
        "(fn_2 cons (cons (- 1 1) empty))",
        "(fn_4 (lambda (lambda (cons (if (empty? $0) 0 (car $0)) (if (empty? $0) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (fn_6 (car $0) +) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr $0)) (fn_6 (car $0) +) $0))))",
        "(fn_4 (lambda (lambda (cons (fn_6 (car $0) +) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (+ (car $0) 1) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (fn_5 (car $0)) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (fn_0 ($1 (cdr $0)) (+ (car $0) 1) $0))))",
        "(fn_3 fn_5)",
        "(fn_4 (lambda (lambda (cons (+ (car $0) 1) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (#(- 0) (car $0)) ($1 (cdr $0)))))))",
        "(fn_3 #(- 0))",
        "(fn_4 (lambda (lambda (cons (#(- 0) (car $0)) (if (empty? (cdr $0)) empty ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (- 1 (+ (car $0) 1)) ($1 (cdr $0)))))))",
        "(fn_4 (lambda (lambda (if (empty? $0) empty (cons (- 1 (fn_5 (car $0))) ($1 (cdr $0)))))))"
      ],
      "utility": 1,
      "expected_cost": 6665,
      "final_cost": 6665,
      "multiplier": 1.0303075768942236,
      "multiplier_wrt_orig": 2.29152288072018,
      "num_uses": 8,
      "uses": [
        {
          "fn_7 ": "(- 0)"
        }
      ]
    }
  ]
}