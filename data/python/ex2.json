[
    "(Module (Import (alias ast)) (ImportFrom _ast (alias If) (alias While) (alias For) 0) (ImportFrom typing (alias Any) 0) (ClassDef ControlNodes (Attribute ast NodeVisitor) (Assign comps (List (Attribute ast comprehension))) (Assign for_nodes (BinOp (List (Attribute ast For) (Attribute ast While)) Add comps)) (Assign if_nodes (List (Attribute ast If) (Attribute ast IfExp))) (FunctionDef __init__ (arguments (arg self)) (Assign (Attribute self for_count) 0) (Assign (Attribute self if_count) 0)) (FunctionDef visit (arguments (arg self) (arg node)) (If (Call any (GeneratorExp (Call isinstance node ft) (comprehension ft (Attribute ControlNodes for_nodes) 0))) (AugAssign (Attribute self for_count) Add 1)) (If (Call any (GeneratorExp (Call isinstance node inode) (comprehension inode (Attribute ControlNodes if_nodes) 0))) (AugAssign (Attribute self if_count) Add 1)) (If (BoolOp And (Call isinstance node (Attribute ast comprehension)) (Call len (Attribute node ifs))) (AugAssign (Attribute self if_count) Add 1)) (Expr (Call (Attribute (Call super) visit) node)))) (FunctionDef compare_structures (arguments (arg lhs_str) (arg code_str)) (Assign ast1 (Call (Attribute ast parse) lhs_str)) (Assign ast2 (Call (Attribute ast parse) code_str)) (Assign cn1 (Call ControlNodes)) (Expr (Call (Attribute cn1 visit) ast1)) (Assign cn2 (Call ControlNodes)) (Expr (Call (Attribute cn2 visit) ast2)) (Return (BoolOp And (Compare (Attribute cn1 if_count) LtE (Attribute cn2 if_count)) (Compare (Attribute cn1 for_count) LtE (Attribute cn2 for_count))))))",
    "(Module (Import (alias json)) (Import (alias os)) (ImportFrom compare_ast (alias Compare) 0) (Import (alias ast)) (Assign compare_ast_fn (Attribute (Call Compare) do)) (With (withitem (Call open data/RQ2/hallucinations.json) f) (Assign hc (Call (Attribute json load) f))) (Assign metadata_files (ListComp i (comprehension i (Call (Attribute os listdir) data/RQ2/data) (Compare metadata In i) 0))) (Assign idioms (SetComp (Subscript (Call (Attribute i split) -metadata) 0) (comprehension i metadata_files 0))) (Assign correct_files List) (For file (Call (Attribute os listdir) data/RQ2/data) (If (Call any (GeneratorExp (Compare i In file) (comprehension i idioms 0))) (If (BoolOp Or (Compare incorrect In file) (Compare metadata In file)) Continue) (Expr (Call (Attribute correct_files append) file)))) (For f correct_files (With (withitem (Call open (JoinedStr data/RQ2/data/ (FormattedValue f -1))) file) (Assign correct_vars (Call (Attribute json load) file))) (For c correct_vars (If (Call any (GeneratorExp (Call compare_ast_fn (Call (Attribute ast parse) (Subscript c code)) (Call (Attribute ast parse) f)) (comprehension f hc 0))) Continue) (Expr (Call print Is hallucination?)) (Expr (Call print (Subscript c code))) (Assign ans (Call input y/n)) (If (Compare ans Eq y) (Assign (Subscript hc (Subscript c code)) True) (If (Compare ans Eq ) (Assign (Subscript hc (Subscript c code)) False))) (If (Compare ans Eq n) (With (withitem (Call open data/RQ2/hallucinations.json w) file) (Expr (Call (Attribute json dump) hc file (keyword indent 1)))) Break))))"
]