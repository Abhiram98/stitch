{"arity": 3, "topK": 2, "pseudoCounts": 30.0, "aic": 1.0, "bs": 1000000, "topI": 300, "structurePenalty": 1.5, "CPUs": 1, "lc_score": 0.0, "DSL": {"logVariable": -0.763121507489581, "productions": [{"expression": "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6))", "logProbability": -2.015328156697417}, {"expression": "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL))", "logProbability": -2.043885233214111}, {"expression": "#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL))", "logProbability": -1.958545421686979}, {"expression": "#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))", "logProbability": -1.924531405437993}, {"expression": "#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))))", "logProbability": -2.074510709982275}, {"expression": "#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL))", "logProbability": -2.04375193087463}, {"expression": "#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4))", "logProbability": -1.9374986304419872}, {"expression": "#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1)", "logProbability": -1.8117461324277744}, {"expression": "#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL)", "logProbability": -2.0745118810848786}, {"expression": "#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0)))", "logProbability": -1.8030868836549039}, {"expression": "#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0))))))))", "logProbability": -1.955374064504427}, {"expression": "#(logo_FWRT logo_UL logo_UA)", "logProbability": -1.7156974041711281}, {"expression": "#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0)))", "logProbability": -1.8602089540000195}, {"expression": "#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0)))))))", "logProbability": -2.105353873837883}, {"expression": "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0)))", "logProbability": -1.8560060791471593}, {"expression": "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0)))", "logProbability": -1.9526044324976772}, {"expression": "#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0)))))", "logProbability": -1.9789171207967207}, {"expression": "#(logo_DIVA logo_UA 4)", "logProbability": -0.2677606112928532}, {"expression": "#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0)))))))", "logProbability": -1.907386054480507}, {"expression": "logo_UA", "logProbability": -0.3342113752032625}, {"expression": "logo_UL", "logProbability": -0.2027307875590192}, {"expression": "logo_ZA", "logProbability": -0.43156980477087137}, {"expression": "logo_ZL", "logProbability": -0.6161735434142108}, {"expression": "logo_DIVA", "logProbability": -0.3710788750200402}, {"expression": "logo_MULA", "logProbability": -0.4011629239458694}, {"expression": "logo_DIVL", "logProbability": -0.5786822438879011}, {"expression": "logo_MULL", "logProbability": -0.408204320162318}, {"expression": "logo_ADDA", "logProbability": -0.419519221944022}, {"expression": "logo_SUBA", "logProbability": -0.44717359004801693}, {"expression": "logo_PT", "logProbability": -2.1364946790211414}, {"expression": "logo_FWRT", "logProbability": -2.0784627562109583}, {"expression": "logo_GETSET", "logProbability": -2.001688705897992}, {"expression": "logo_IFTY", "logProbability": -1.2655936285436162}, {"expression": "logo_epsA", "logProbability": -0.40667616266486917}, {"expression": "logo_epsL", "logProbability": -0.5636383699975789}, {"expression": "logo_forLoop", "logProbability": -1.87674057350818}, {"expression": "0", "logProbability": -1.2726128876517775}, {"expression": "1", "logProbability": -1.345186112580154}, {"expression": "2", "logProbability": -0.9581242887846897}, {"expression": "3", "logProbability": -0.9152213738645969}, {"expression": "4", "logProbability": -1.025506104749188}, {"expression": "5", "logProbability": -0.8942006715211441}, {"expression": "6", "logProbability": -1.2381993561525224}, {"expression": "7", "logProbability": -1.1320292487464445}, {"expression": "8", "logProbability": -1.1423486103127063}, {"expression": "9", "logProbability": -1.2904145224176}], "continuationType": {"constructor": "turtle", "arguments": []}}, "iterations": 20, "frontiers": [{"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-gon (*d 1l 2)", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 (logo_MULA (logo_DIVA logo_UA 3) 4) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_UA 3) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_MULA (logo_DIVA logo_UA 3) 4) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 (logo_DIVA logo_UA 3) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA logo_UA 3) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-gon (*d 1d 4)", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 4) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 4) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-gon (*d 1d 2)", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA logo_UA 5) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 (logo_DIVA logo_UA 5) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_MULA (logo_DIVA #(logo_DIVA logo_UA 4) 5) 4) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_UA 5) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_MULA (logo_DIVA #(logo_DIVA logo_UA 4) 5) 4) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-gon 1l", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 6 (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 6 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-gon (*d 1d 3)", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_UA 7) (logo_MULL logo_UL 3) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_MULA (logo_DIVA #(logo_DIVA logo_UA 4) 7) 4) (logo_MULL logo_UL 3) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "8-gon 1l slanted 3", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 8 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 8 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 8 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 8 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 8 (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 8 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 6", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 6 logo_UL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 6 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 6 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 6 $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 6 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 9", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 9 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 9 logo_UL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 9 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 9 $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 9 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 2", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 4", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "star 3", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 (logo_MULA (logo_DIVA logo_UA 3) 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 (logo_DIVA logo_UA 3) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_MULA (logo_DIVA logo_UA 3) 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA logo_UA 3) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_UA 3) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "flower 5", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "flower 6", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "flower 7", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 9 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0))) 7 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 1", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) logo_epsL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 2", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 2", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 5 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 2 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 3", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 (logo_FWRT logo_ZL logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 4", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_DIVL logo_UL 5) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 5", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 5 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 5 (logo_FWRT logo_ZL logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 5 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 5 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 6", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 6 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 1 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 6 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 6 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6 enclosed circles", "programs": [{"program": "(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) $1 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) $1 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-circle flower l=2", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 2 $0)) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-circle flower l=3", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 3 $0))) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "2-semicircle sequence L=1", "programs": [{"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "1-semicircle sequence L=2", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "1-semicircle sequence L=1", "programs": [{"program": "(lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 3 circles", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 3 lines", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_FWRT logo_UL logo_UA $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_FWRT logo_UL logo_UA $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4 dashed lines of size (/d 1d 3)", "programs": [{"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_FWRT (logo_DIVL logo_UL 3) logo_UA $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "semicircle next to square", "programs": [{"program": "(lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) logo_UL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle next to square", "programs": [{"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_FWRT logo_UL logo_UA) $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) logo_UL $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 5 dashes", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 6 semicircles", "programs": [{"program": "(lambda (logo_forLoop 6 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-empty snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 3 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-dashed snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_FWRT logo_UL logo_UA $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-circle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-lonely circle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-square snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 3 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-close large semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 3 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-close semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 3 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-empty snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-dashed snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_FWRT logo_UL logo_UA $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-circle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-lonely circle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-square dashed snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-close large semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-close semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-double dashed snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-empty snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-spiral snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 0 $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 $0)) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-circle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-lonely circle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-square dashed snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-close semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA logo_epsL $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-Greek snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-empty snowflake", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) $0)) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) $0)) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-dashed snowflake", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 2 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_FWRT logo_UL logo_UA $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_FWRT logo_UL logo_epsA $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-square dashed snowflake", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) logo_UL $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) logo_UL $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-square snowflake", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) logo_UL $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-close large semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-dashed snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 2 $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_FWRT logo_UL logo_UA $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 7 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-lonely circle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 7 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-square dashed snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) logo_UL $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 7 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-close large semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0))) 7 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-close semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA logo_epsL $0)) 7 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-row of squares", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) logo_UL $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "2x2 grid", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 #(logo_DIVA logo_UA 4) logo_UL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "slanted squares", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) logo_UL (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 4", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 4) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 4) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 5", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 5) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 5) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 5) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 5) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 5) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-concentric squares", "programs": [{"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL $1) $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-gon 1l slanted 8", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 3 (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 3 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 3 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 logo_epsA logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-gon (*d 1d 3)", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 3) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 3) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 3) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 3) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 3) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-gon 1l", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 5 (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 5 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 5 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-gon 1l", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 7 (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 7 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 7 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 7 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "8-gon (/d 1d 2)", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 8 (logo_DIVA #(logo_DIVA logo_UA 4) 2) (logo_DIVL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 8 (logo_MULA logo_epsA 5) (logo_DIVL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) 2) (logo_DIVL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 9 (logo_DIVA #(logo_DIVA logo_UA 4) 2) (logo_DIVL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_MULA logo_epsA 5) (logo_DIVL logo_UL 2) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "upwards", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 1 (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right angle", "programs": [{"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_SUBA logo_UA #(logo_DIVA logo_UA 4)) 3 logo_UL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_SUBA logo_ZA #(logo_DIVA logo_UA 4)) 3 logo_UL $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right angle epsilon", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) logo_epsL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) logo_epsL (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) logo_epsL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) (logo_DIVL logo_UL logo_IFTY) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 (logo_ADDA logo_UA #(logo_DIVA logo_UA 4)) logo_epsL $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "line segment", "programs": [{"program": "(lambda (#(logo_FWRT logo_UL logo_UA) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 1 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square slanted by 2pi/3", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda $0) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda $0) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "semicircle slanted by 2pi/5", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 5 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 5 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 5 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 8 logo_epsA logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral slanted by 2pi/6", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 7 logo_UL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Hook slanted by 2pi/7", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 7 (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 7 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 1 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 7 (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 7 (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 7 (logo_FWRT logo_UL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "slanted line", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (logo_FWRT (logo_MULL logo_UL 3) #(logo_DIVA logo_UA 4) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (logo_FWRT (logo_MULL logo_UL 3) logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (logo_FWRT (logo_MULL logo_UL 3) logo_epsA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (logo_FWRT (logo_MULL logo_UL 3) logo_ZA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_DIVA #(logo_DIVA logo_UA 4) 2) 2 (logo_MULL logo_UL 3) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 7", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 7 logo_UL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 8", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 8 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 8 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 8 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 8 logo_UL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 8 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 3", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 3 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 3 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 5", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 5 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 5 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 4 slanted by 2pi/2", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 0 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "star 5", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA (logo_MULA logo_UA 2) 5) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_MULA (logo_DIVA logo_UA 5) 2) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 8 (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "star 9", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA (logo_MULA logo_UA 4) 9) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_MULA (logo_DIVA logo_UA 9) 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 9 (logo_DIVA (logo_MULA logo_UA 4) 9) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 9 (logo_MULA (logo_DIVA logo_UA 9) 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA (logo_MULA logo_UA 4) 9) (logo_MULL logo_UL 4) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 1.1", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 1.2", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 0 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 2.1", "programs": [{"program": "(lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 2.2", "programs": [{"program": "(lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "flower 3", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 3 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "flower 4", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0))))) $0)) 4 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "staircase 5", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) logo_UL (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 0 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) logo_UL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "blocks zigzag 1", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 #(logo_DIVA logo_UA 4) logo_UL (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 #(logo_DIVA logo_UA 4) logo_UL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 #(logo_DIVA logo_UA 4) logo_UL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 0 (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 (logo_SUBA logo_UA #(logo_DIVA logo_UA 4)) logo_UL (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 (logo_SUBA logo_ZA #(logo_DIVA logo_UA 4)) logo_UL (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 1", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 logo_epsA logo_ZL (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 1", "programs": [{"program": "(lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 2", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 3", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 3", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 3 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 3 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 4", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 4 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 4 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 4", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 5", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 5 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 5 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 5", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 5 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 5 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 6", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 6 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 6 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 6", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 6 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 6 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5 enclosed circles", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) $1 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) $1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) $2 $0)) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 2 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) $3 $0))) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) $3 $0))) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) $1 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) $1 $0)))) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-circle flower l=4", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0)) 6 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-circle flower l=1", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 3 (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-semicircle sequence L=1", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_forLoop 3 (lambda (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "2-semicircle sequence L=2", "programs": [{"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_forLoop 2 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) $1 $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "1-semicircle sequence L=3", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_ZL $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 2 circles", "programs": [{"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_GETSET (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_GETSET (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 2 lines", "programs": [{"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 2 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 1 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "line next to semicircle", "programs": [{"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 1 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3 dashed lines of size (/d 1d 2)", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) logo_UA 5 logo_epsL (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) logo_UA 5 logo_epsL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) logo_ZA 5 logo_epsL (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) logo_ZA 5 logo_epsL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_FWRT (logo_DIVL logo_UL 2) logo_UA $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "broken circle", "programs": [{"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle next to semicircle", "programs": [{"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle next to line", "programs": [{"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_GETSET (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_GETSET (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 2 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "line next to circle", "programs": [{"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 2 (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_FWRT logo_UL logo_UA) $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 2 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) (#(logo_FWRT logo_UL logo_UA) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(logo_FWRT logo_UL logo_UA) $0)) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 4 dashes", "programs": [{"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 5 semicircles", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0))) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-spiral snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 3 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 2 $0)) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-square dashed snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 3 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-double dashed snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 3 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-Greek snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 3 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 4 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-dashed snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-square snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-close large semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 6 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0))) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-circle snowflake", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 1 (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-lonely circle snowflake", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-close semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1) $0)) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-double dashed snowflake", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (logo_forLoop 2 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0)))) $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 2 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 1 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 $0 6)) (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 1 $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-empty snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 9 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 2 $0)) 7 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-circle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 9 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))) 7 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-square snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) logo_IFTY (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 9 (lambda (#(logo_FWRT logo_UL logo_UA) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 4 $0))) 7 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-row of squares", "programs": [{"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 4 (#(logo_FWRT logo_UL logo_UA) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 4 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 1", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) logo_UL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 2", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 2) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 2) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 2) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_DIVL (logo_MULL logo_UL 4) 2) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 3", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 3) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 3) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 3) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 3) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 3) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-concentric squares", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL $1) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL $1) $0))) (#(logo_FWRT logo_UL logo_UA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_forLoop 5 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL $1) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL $1) $0))) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4)) (logo_MULL (logo_MULL logo_UL $1) 1) $0))) $0))", "logLikelihood": 0.0}]}]}