{"arity": 3, "topK": 2, "pseudoCounts": 30.0, "aic": 1.0, "bs": 1000000, "topI": 300, "structurePenalty": 1.5, "CPUs": 1, "lc_score": 0.0, "DSL": {"logVariable": -0.7678293619306835, "productions": [{"expression": "#(lambda (lambda (logo_forLoop 5 $0 $1)))", "logProbability": -1.8266335621997434}, {"expression": "#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0)))))))", "logProbability": -2.0089463072380407}, {"expression": "#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4))", "logProbability": -1.8496139053354965}, {"expression": "#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1))))", "logProbability": -1.9493555344009423}, {"expression": "#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))", "logProbability": -1.8695923259110714}, {"expression": "#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0)))))", "logProbability": -1.9781724137178052}, {"expression": "#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0))))", "logProbability": -1.9483253903796727}, {"expression": "#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0)))", "logProbability": -2.0089439958101027}, {"expression": "#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0))))))))", "logProbability": -2.0089439957650908}, {"expression": "#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0)))))", "logProbability": -1.8960785091982104}, {"expression": "#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0))))", "logProbability": -1.7461173379594719}, {"expression": "#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA)", "logProbability": -1.8188415368702775}, {"expression": "#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA)", "logProbability": -1.8729205266333948}, {"expression": "#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4)))", "logProbability": -1.874473523593558}, {"expression": "#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0))", "logProbability": -2.008931210969365}, {"expression": "#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA))", "logProbability": -1.8450020591523137}, {"expression": "#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)))", "logProbability": -1.8317773660030476}, {"expression": "#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0)))))", "logProbability": -1.9077786290217507}, {"expression": "#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA)))", "logProbability": -1.8987697196838331}, {"expression": "#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0)))))", "logProbability": -1.978172337098337}, {"expression": "#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY)))", "logProbability": -2.016820338214033}, {"expression": "#(logo_DIVA logo_UA 4)", "logProbability": -0.12345100267560838}, {"expression": "#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0)))))))", "logProbability": -1.9850722645260377}, {"expression": "logo_UA", "logProbability": -0.18911373896014272}, {"expression": "logo_UL", "logProbability": -0.211556473256596}, {"expression": "logo_ZA", "logProbability": -0.23676412871739272}, {"expression": "logo_ZL", "logProbability": -0.44087979512133835}, {"expression": "logo_DIVA", "logProbability": -0.20600090051592446}, {"expression": "logo_MULA", "logProbability": -0.20752551397679442}, {"expression": "logo_DIVL", "logProbability": -0.539812909673131}, {"expression": "logo_MULL", "logProbability": -0.5384418376384636}, {"expression": "logo_ADDA", "logProbability": -0.24031533679978523}, {"expression": "logo_SUBA", "logProbability": -0.22644119895968906}, {"expression": "logo_PT", "logProbability": -2.0386230319386622}, {"expression": "logo_FWRT", "logProbability": -2.0490526867741736}, {"expression": "logo_GETSET", "logProbability": -2.003099660287383}, {"expression": "logo_IFTY", "logProbability": -1.2058428764792}, {"expression": "logo_epsA", "logProbability": -0.23098258720296894}, {"expression": "logo_epsL", "logProbability": -0.5726933175926767}, {"expression": "logo_forLoop", "logProbability": -1.929638239551546}, {"expression": "0", "logProbability": -1.132847176439109}, {"expression": "1", "logProbability": -1.146674988236788}, {"expression": "2", "logProbability": -0.9221752540193249}, {"expression": "3", "logProbability": -0.8551412307865092}, {"expression": "4", "logProbability": -0.9675349971286891}, {"expression": "5", "logProbability": -1.0643084250761636}, {"expression": "6", "logProbability": -1.1019199723156032}, {"expression": "7", "logProbability": -1.1191218456641407}, {"expression": "8", "logProbability": -1.1119908697841971}, {"expression": "9", "logProbability": -1.2391938120758974}], "continuationType": {"constructor": "turtle", "arguments": []}}, "iterations": 20, "frontiers": [{"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-gon (*d 1l 2)", "programs": [{"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 2) (logo_DIVA (logo_MULA logo_UA 4) 3) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 3 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 3 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 3 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-gon (*d 1d 4)", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) #(logo_DIVA logo_UA 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 4 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 4 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 4 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-gon (*d 1d 2)", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 5 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 5 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 5 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 5 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-gon 1l", "programs": [{"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 6 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 6 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 6 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-gon (*d 1d 3)", "programs": [{"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 3) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 3) 7 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 3) 7 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 3) 7 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 3) 7 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "8-gon 1l slanted 3", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 8 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 8 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 8 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 8 $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_DIVL logo_epsL 2) 6 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 8 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 6", "programs": [{"program": "(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 9", "programs": [{"program": "(lambda (logo_forLoop 9 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 2", "programs": [{"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 2 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 2 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 4", "programs": [{"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "star 3", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 4) 3 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 4) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) (logo_DIVA (logo_MULA logo_UA 4) 3) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 4) 3 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 4) 3 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "star 7", "programs": [{"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) (logo_DIVA (logo_MULA logo_UA 3) 7) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) (logo_DIVA (logo_MULA logo_UA 4) 7) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 1", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 1 (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA (logo_SUBA logo_epsA #(logo_DIVA logo_UA 4)) 9) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 2", "programs": [{"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 5 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL 2) logo_epsA $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 2", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 3", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 3 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 1 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 4", "programs": [{"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL 4) logo_epsA $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 4 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 5 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 4 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 5", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 1 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 5 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 5 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 6", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 6 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL 6) logo_epsA $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 6 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 5 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 6 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6 enclosed circles", "programs": [{"program": "(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $1 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-circle flower l=2", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 2 $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 2 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-circle flower l=3", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 3 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 3 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 8 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 3 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "2-semicircle sequence L=1", "programs": [{"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "1-semicircle sequence L=2", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 5 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "1-semicircle sequence L=1", "programs": [{"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 5 (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 3 circles", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))))))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 3 lines", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_FWRT logo_UL logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4 dashed lines of size (/d 1d 3)", "programs": [{"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_FWRT (logo_DIVL logo_UL 3) logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "semicircle next to square", "programs": [{"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 4 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 6 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 8 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 5 $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle next to square", "programs": [{"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 5 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 6 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 4 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 8 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 5 dashes", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $2 $0))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 $0))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 6 semicircles", "programs": [{"program": "(lambda (logo_forLoop 6 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-empty snowflake", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-close semicircle snowflake", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-empty snowflake", "programs": [{"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 2 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 2 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-close large semicircle snowflake", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-close semicircle snowflake", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-empty snowflake", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-close semicircle snowflake", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 6 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 8 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-row of squares", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "2x2 grid", "programs": [{"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "slanted squares", "programs": [{"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 4 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 8 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 4 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 8 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 4", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) #(logo_DIVA logo_UA 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 4 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 4 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 4 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 5", "programs": [{"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 5 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 5 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 5 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 5 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-concentric squares", "programs": [{"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 5 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-gon 1l slanted 8", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 3 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 3 (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA 5 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-gon (*d 1d 3)", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 3) #(logo_DIVA logo_UA 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 (logo_PT (lambda $0) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-gon 1l", "programs": [{"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 5 (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 1) 5 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-gon (*d 1d 2) slanted 5", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 6 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 6 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA 8 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL (logo_DIVL logo_UL 2) 4) 6 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-gon 1l", "programs": [{"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 7 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 7 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 7 (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 1) 7 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "8-gon (/d 1d 2)", "programs": [{"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_DIVL logo_UL 2) 8 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_DIVL logo_UL 2) 8 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_DIVL logo_UL 2) 8 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL (logo_DIVL logo_UL 4) 2) 8 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_DIVL (logo_MULL logo_UL 2) 4) 8 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "upwards", "programs": [{"program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (logo_FWRT logo_UL logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (logo_FWRT logo_UL logo_ZA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (logo_FWRT logo_UL logo_epsA $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right angle", "programs": [{"program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 2 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 2 (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 2 (logo_FWRT logo_UL logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 2 (logo_FWRT logo_UL logo_ZA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 2 (logo_FWRT logo_UL logo_epsA $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right angle epsilon", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_epsL #(logo_DIVA logo_UA 4) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_epsL #(logo_DIVA logo_UA 4) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_epsL #(logo_DIVA logo_UA 4) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_DIVL logo_UL logo_IFTY) #(logo_DIVA logo_UA 4) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_epsL #(logo_DIVA logo_UA 4) (logo_FWRT logo_epsL #(logo_DIVA logo_UA 4) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "line segment", "programs": [{"program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_UL logo_UA $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_UL logo_ZA $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_UL logo_epsA $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square slanted by 2pi/3", "programs": [{"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_UL #(logo_DIVA logo_UA 4) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 4 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "semicircle slanted by 2pi/5", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 7 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 4 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 7 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral slanted by 2pi/6", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda $0) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda $0) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda $0) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda $0) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "slanted line", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 3 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA 5 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (logo_FWRT (logo_MULL logo_UL 3) #(logo_DIVA logo_UA 4) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 7", "programs": [{"program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT (logo_MULL logo_UL $1) #(logo_DIVA logo_UA 4) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 (logo_PT (lambda $0) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 8", "programs": [{"program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 8 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 8 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 8 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 8 $0) logo_ZL))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 8 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 3", "programs": [{"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 3 (logo_PT (lambda $0) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_PT (lambda $0) (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 5", "programs": [{"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 5 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 5 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 4 slanted by 2pi/2", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 0 (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 0 (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_ZL logo_epsA (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 8 (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "star 5", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 4 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 6 $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 4 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 6 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) (logo_ADDA #(logo_DIVA logo_UA 4) (logo_MULA logo_epsA 6)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) (logo_ADDA (logo_MULA logo_epsA 6) #(logo_DIVA logo_UA 4)) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "star 9", "programs": [{"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) (logo_DIVA (logo_MULA logo_UA 4) 9) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) (logo_MULA (logo_DIVA logo_UA 9) 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_UL 4) (logo_DIVA (logo_MULA logo_UA 4) 9) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_UL 4) (logo_MULA (logo_DIVA logo_UA 9) 4) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_UL 4) (logo_DIVA (logo_MULA logo_UA 4) 9) 9 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 1.1", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (logo_PT (lambda $0) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_PT (lambda $0) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 1.2", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_ZL logo_epsA (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 8 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 2.1", "programs": [{"program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 2.2", "programs": [{"program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "flower 3", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "flower 4", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 8 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "staircase 5", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 0 $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 0 $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_ZL logo_epsA $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 8 $0)))))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "blocks zigzag 1", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 0 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 0 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 0 (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "blocks zigzag 2", "programs": [{"program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 2 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "blocks zigzag 3", "programs": [{"program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 3 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 1", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 4 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 1", "programs": [{"program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 1 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 2", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 3", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 3", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 3 (logo_PT (lambda $0) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_PT (lambda $0) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 4", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 4 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 4 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 4", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 $0) logo_ZL))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 5", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 5 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_DIVL logo_UL 4) logo_epsA $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 5", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 5 (logo_PT (lambda $0) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_PT (lambda $0) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 5 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 6", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 6 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 6 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 6 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 6", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 6 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 6 $0) logo_ZL))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 6 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5 enclosed circles", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $1 $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) $2 $0)) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) $2 $0)) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_forLoop 2 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 $0))) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-circle flower l=4", "programs": [{"program": "(lambda (logo_forLoop 8 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 8 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-circle flower l=1", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-semicircle sequence L=1", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 1 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 1 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 1 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 1 3 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 1 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "2-semicircle sequence L=2", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 2 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 2 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 2 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 2 2 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 2 2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "1-semicircle sequence L=3", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 3 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 3 (logo_PT (lambda $0) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 (logo_PT (lambda $0) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 3 $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 2 circles", "programs": [{"program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 1 (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 1 $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 2 lines", "programs": [{"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0) logo_UL))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_UL) logo_UL))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0) logo_UL))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)) logo_UL))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0) logo_UL)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "line next to semicircle", "programs": [{"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0) logo_UL))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 1 $0) logo_UL))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)) logo_UL))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0) logo_UL)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA $0) logo_UL))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3 dashed lines of size (/d 1d 2)", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT (logo_DIVL logo_UL 2) logo_UA $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 (logo_DIVL logo_UL 2)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT (logo_DIVL logo_UL 2) logo_ZA $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_FWRT (logo_DIVL logo_UL 2) logo_ZA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_DIVL logo_epsL 2) logo_UA $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "broken circle", "programs": [{"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle next to semicircle", "programs": [{"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle next to line", "programs": [{"program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT logo_UL logo_UA $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT logo_UL logo_ZA $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT logo_UL logo_epsA $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "line next to circle", "programs": [{"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)) logo_UL))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_UL logo_ZA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0)) logo_UL))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 1 $0)) logo_UL))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_UL logo_ZA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 4 dashes", "programs": [{"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0)) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_GETSET (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $3 $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0))) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $2 $0))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 $0))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 5 semicircles", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_ZL))))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-close large semicircle snowflake", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 8 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 6 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 8 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 6 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-close semicircle snowflake", "programs": [{"program": "(lambda (logo_forLoop 8 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 9 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 8 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-empty snowflake", "programs": [{"program": "(lambda (logo_forLoop 8 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 7 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 8 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 7 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 7 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 7 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop logo_IFTY (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 7 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-row of squares", "programs": [{"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_UL #(logo_DIVA logo_UA 4) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_UL #(logo_DIVA logo_UA 4) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 1", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_UL #(logo_DIVA logo_UA 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 2", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 2 (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 2 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 3", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 3) #(logo_DIVA logo_UA 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 (logo_PT (lambda $0) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-concentric squares", "programs": [{"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0) (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0) (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0)))))", "logLikelihood": 0.0}]}]}