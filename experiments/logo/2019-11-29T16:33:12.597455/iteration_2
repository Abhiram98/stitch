{"arity": 3, "topK": 2, "pseudoCounts": 30.0, "aic": 1.0, "bs": 1000000, "topI": 300, "structurePenalty": 1.5, "CPUs": 1, "lc_score": 0.0, "DSL": {"logVariable": -0.6880313015440391, "productions": [{"expression": "#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0))))", "logProbability": -1.738516748187906}, {"expression": "#(lambda (logo_FWRT logo_UL logo_UA $0))", "logProbability": -1.6227126127421747}, {"expression": "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0)))", "logProbability": -1.708737478104359}, {"expression": "#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)))", "logProbability": -1.6792800307109488}, {"expression": "#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0)))", "logProbability": -1.6962789980546606}, {"expression": "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0)))", "logProbability": -1.605118620152505}, {"expression": "#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA)", "logProbability": -1.5699042995391839}, {"expression": "#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL)", "logProbability": -1.7082519163944032}, {"expression": "#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0)))))))", "logProbability": -1.633260226931494}, {"expression": "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0)))", "logProbability": -1.708941217567487}, {"expression": "#(logo_DIVA logo_UA 4)", "logProbability": -0.47287078727893794}, {"expression": "#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0)))))))", "logProbability": -1.6489794783199097}, {"expression": "#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0)))))", "logProbability": -1.6617349870993818}, {"expression": "logo_UA", "logProbability": -0.6182115736519491}, {"expression": "logo_UL", "logProbability": -0.5251658758221094}, {"expression": "logo_ZA", "logProbability": -0.7722255318010811}, {"expression": "logo_ZL", "logProbability": -0.8084273287825776}, {"expression": "logo_DIVA", "logProbability": -0.6296955492231553}, {"expression": "logo_MULA", "logProbability": -0.6609391162073024}, {"expression": "logo_DIVL", "logProbability": -0.9544059636672033}, {"expression": "logo_MULL", "logProbability": -0.8433404295765596}, {"expression": "logo_ADDA", "logProbability": -0.7710162602187935}, {"expression": "logo_SUBA", "logProbability": -0.780280161004943}, {"expression": "logo_PT", "logProbability": -1.7684972581965628}, {"expression": "logo_FWRT", "logProbability": -1.5202282240375848}, {"expression": "logo_GETSET", "logProbability": -1.7999143597259515}, {"expression": "logo_IFTY", "logProbability": -1.1184382571991613}, {"expression": "logo_epsA", "logProbability": -0.5957183957526433}, {"expression": "logo_epsL", "logProbability": -0.6482127649865528}, {"expression": "logo_forLoop", "logProbability": -1.52004661519423}, {"expression": "0", "logProbability": -1.1837796004952774}, {"expression": "1", "logProbability": -1.1330945209668473}, {"expression": "2", "logProbability": -0.8733119869274031}, {"expression": "3", "logProbability": -0.8186196815184368}, {"expression": "4", "logProbability": -0.8254135899680421}, {"expression": "5", "logProbability": -0.9002184376361941}, {"expression": "6", "logProbability": -1.0765868895750947}, {"expression": "7", "logProbability": -1.0250028178898232}, {"expression": "8", "logProbability": -1.0618676347704987}, {"expression": "9", "logProbability": -1.117560069760522}], "continuationType": {"constructor": "turtle", "arguments": []}}, "iterations": 20, "frontiers": [{"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-gon (*d 1l 2)", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 3 (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 3 (logo_MULL (logo_DIVL logo_UL 2) 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 3 (logo_MULL logo_UL 2) (logo_FWRT logo_ZL logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 (logo_DIVA logo_UA 3) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 3 (logo_MULL logo_UL 2) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-gon (*d 1d 4)", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 4) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 (logo_MULA #(logo_DIVA logo_UA 4) 3) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 4) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-gon (*d 1d 2)", "programs": [{"program": "(lambda (logo_FWRT logo_ZL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 5 (logo_MULL logo_UL 2) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA logo_UA 5) (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 5 (logo_MULL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 8 logo_epsA logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 5 (logo_MULL logo_UL 2) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 5 (logo_MULL logo_UL 2) (logo_FWRT logo_ZL logo_UA $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-gon 1l", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 6 logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 6 logo_UL (logo_FWRT logo_ZL logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 6 (logo_MULL logo_UL $1) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 6 logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 6 logo_UL $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-gon (*d 1d 3)", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 7 (logo_MULL logo_UL 3) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 7 (logo_MULL logo_UL 3) (logo_FWRT logo_UL logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 7 (logo_MULL logo_UL 3) (logo_FWRT logo_ZL logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 7 (logo_MULL logo_UL 3) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 (logo_DIVA logo_UA 7) (logo_MULL logo_UL 3) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "8-gon 1l slanted 3", "programs": [{"program": "(lambda (logo_FWRT logo_epsL (logo_DIVA logo_UA 3) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 8 logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 3) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 8 logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 (logo_DIVA #(logo_DIVA logo_UA 4) 3) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 8 logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA logo_UA 6) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 8 logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 (logo_DIVA logo_UA 3) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 8 logo_UL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 6", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL (logo_DIVA logo_UA 4) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 0 (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 6 (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 6 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 9", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL (logo_DIVA logo_UA 4) 9 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 9 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 0 (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 9 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 9 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 9 (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 2", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_DIVA #(logo_DIVA logo_UA 4) 5) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_DIVA logo_UA logo_IFTY) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) 4) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_ADDA logo_epsA logo_epsA) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) (logo_DIVL logo_UL logo_IFTY) (logo_DIVA logo_UA logo_IFTY) logo_IFTY $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 4", "programs": [{"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 0 (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA logo_epsA 4) logo_IFTY $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA (logo_ADDA logo_epsA #(logo_DIVA logo_UA 4)) 4) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_SUBA (logo_DIVA logo_UA 8) logo_epsA) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) (logo_DIVL logo_UL logo_IFTY) (logo_MULA logo_epsA 4) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA logo_epsA 4) logo_IFTY $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "star 3", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 3 (logo_MULL logo_UL 4) (logo_FWRT logo_ZL logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 3 (logo_MULL (logo_MULL logo_UL 2) 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 3 (logo_MULL logo_UL 4) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 3 (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 (logo_DIVA logo_UA 3) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 1", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 logo_UA logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 2", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL (logo_DIVL logo_UL 2) 5) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL (logo_DIVL logo_UL 5) 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL (logo_MULL logo_epsL 4) 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL 2) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 2", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 2 (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL #(logo_DIVA logo_UA 4) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 2 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 3", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 logo_UA logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 3 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 4", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL logo_UL 5) (logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL logo_UL 5) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL logo_UL 5) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL 4) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 5", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 5 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 logo_UA logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 5 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 6", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL (logo_MULL logo_epsL 2) 3) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL 6) (logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL 6) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL 6) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL (logo_MULL logo_epsL 3) 2) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6 enclosed circles", "programs": [{"program": "(lambda (logo_forLoop 6 (lambda (lambda (logo_FWRT logo_ZL logo_UA (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) $1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 5 (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) $1 $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 5 (logo_forLoop 5 (lambda (lambda (logo_FWRT logo_ZL logo_UA (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) $1 $0)))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) $1 $0))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-circle flower l=2", "programs": [{"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 2 $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "2-semicircle sequence L=1", "programs": [{"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "1-semicircle sequence L=2", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL 2) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL (logo_MULL logo_epsL 4) 2) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL (logo_DIVL logo_UL 2) 5) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL (logo_DIVL logo_UL 5) 2) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL 2) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "1-semicircle sequence L=1", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 (logo_FWRT logo_ZL logo_UA $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 0 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL logo_UL logo_IFTY) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 3 circles", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0)) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_PT (lambda (logo_FWRT logo_UL (logo_MULA #(logo_DIVA logo_UA 4) 4) $0)) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_PT (lambda (logo_FWRT logo_UL logo_UA (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0))) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_PT (lambda (logo_FWRT logo_UL logo_UA (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) $2 $0))) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 3 lines", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_FWRT logo_UL logo_UA (logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_PT (lambda (logo_FWRT logo_UL logo_UA (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0))) (logo_FWRT logo_UL logo_UA $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_FWRT logo_UL logo_UA (logo_PT (lambda (logo_FWRT logo_UL logo_UA (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)) (logo_FWRT logo_UL logo_UA $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_PT (lambda (logo_FWRT logo_UL logo_UA (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) $2 $0))) (logo_FWRT logo_UL logo_UA $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "semicircle next to square", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (logo_PT (lambda (logo_FWRT logo_UL logo_UA (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)) (logo_FWRT logo_ZL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0)) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle next to square", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 5 dashes", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_PT (lambda (logo_FWRT (logo_MULL logo_UL $2) #(logo_DIVA logo_UA 4) $0)) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-empty snowflake", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_GETSET (lambda (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0)) (logo_FWRT logo_ZL (logo_DIVA logo_UA 3) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_GETSET (lambda (logo_FWRT logo_UL logo_UA $0)) (logo_FWRT logo_ZL (logo_DIVA logo_UA 3) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-empty snowflake", "programs": [{"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_GETSET (lambda (logo_FWRT logo_UL logo_epsA $0)) (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_GETSET (lambda (logo_FWRT logo_UL logo_UA $0)) (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_GETSET (lambda (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0)) (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) (logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-row of squares", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0)) (logo_FWRT logo_UL logo_UA $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL (logo_FWRT logo_UL (logo_MULA #(logo_DIVA logo_UA 4) 4) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL (logo_FWRT logo_UL logo_UA $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL (logo_FWRT logo_UL logo_ZA $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "2x2 grid", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) (logo_FWRT logo_UL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 4", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 4) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 (logo_MULA #(logo_DIVA logo_UA 4) 3) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 4) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 5", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 (logo_MULA #(logo_DIVA logo_UA 4) 3) (logo_MULL logo_UL 5) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 5) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 5) (logo_FWRT logo_UL logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 5) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 5) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-concentric squares", "programs": [{"program": "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL $1) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT logo_ZL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL $1) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-gon 1l slanted 8", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 logo_epsA logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 3 logo_UL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-gon (*d 1d 3)", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) 3 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-gon 1l", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 5 logo_UL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 5 logo_UL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 5 logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 5 (logo_MULL logo_UL 1) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 5 (logo_MULL logo_epsL logo_IFTY) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-gon (*d 1d 2) slanted 5", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_ZL logo_epsA 8 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 6 (logo_MULL logo_UL 2) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 8 logo_epsA logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 6 (logo_MULL logo_UL 2) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_epsL (logo_DIVA logo_UA 5) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 6 (logo_MULL logo_UL 2) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 5) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 6 (logo_MULL logo_UL 2) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_epsL (logo_MULA logo_epsA 8) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 6 (logo_MULL logo_UL 2) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-gon 1l", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 7 logo_UL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 7 (logo_MULL logo_UL 1) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 7 (logo_DIVL logo_UL 1) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 7 logo_UL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 7 logo_UL (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "8-gon (/d 1d 2)", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 8 (logo_DIVL logo_UL 2) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 8 (logo_DIVL logo_UL 2) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 8 (logo_DIVL logo_UL 2) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 8 (logo_DIVL (logo_MULL logo_UL 2) 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 8 (logo_MULL (logo_DIVL logo_UL 4) 2) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "upwards", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_PT (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0)) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 2 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right angle", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL (logo_SUBA logo_UA #(logo_DIVA logo_UA 4)) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL (logo_MULA #(logo_DIVA logo_UA 4) 3) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL (logo_SUBA logo_ZA #(logo_DIVA logo_UA 4)) 3 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right angle epsilon", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) logo_epsL $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_epsL #(logo_DIVA logo_UA 4) (logo_FWRT logo_epsL #(logo_DIVA logo_UA 4) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_epsL #(logo_DIVA logo_UA 4) (logo_FWRT logo_epsL logo_UA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_epsL #(logo_DIVA logo_UA 4) (logo_FWRT logo_epsL logo_epsA $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_epsL #(logo_DIVA logo_UA 4) (logo_FWRT logo_epsL logo_ZA $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "line segment", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_UL logo_epsA $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square slanted by 2pi/3", "programs": [{"program": "(lambda (logo_FWRT logo_ZL (logo_DIVA #(logo_DIVA logo_UA 4) 3) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_epsL (logo_DIVA logo_UA 3) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 3) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL (logo_DIVA #(logo_DIVA logo_UA 4) 3) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) logo_UL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_epsL (logo_DIVA logo_UA 3) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) logo_UL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "semicircle slanted by 2pi/5", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_ZL logo_epsA 7 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL (logo_MULA logo_epsA 7) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_ZL logo_epsA 7 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_ZL logo_epsA 7 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral slanted by 2pi/6", "programs": [{"program": "(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 6) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 7 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_ZL (logo_DIVA #(logo_DIVA logo_UA 4) 3) 2 (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 7 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 (logo_DIVA #(logo_DIVA logo_UA 4) 3) logo_ZL (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 7 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_ZL (logo_DIVA #(logo_DIVA logo_UA 4) 6) 4 (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 7 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 (logo_DIVA #(logo_DIVA logo_UA 4) 6) logo_ZL (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 7 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Hook slanted by 2pi/7", "programs": [{"program": "(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 7) (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL 4) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 7) (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL logo_UL 5) $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "slanted line", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) (logo_MULL logo_UL 3) (logo_DIVA #(logo_DIVA logo_UA 4) 2) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) (logo_MULL logo_UL 3) (logo_MULA logo_epsA 5) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) (logo_MULL logo_UL 3) (logo_DIVA logo_UA 8) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 logo_epsA logo_ZL (logo_FWRT (logo_MULL logo_UL 3) #(logo_DIVA logo_UA 4) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_ZL logo_epsA 5 (logo_FWRT (logo_MULL logo_UL 3) #(logo_DIVA logo_UA 4) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 7", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL (logo_SUBA #(logo_DIVA logo_UA 4) logo_UA) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL (logo_ADDA #(logo_DIVA logo_UA 4) logo_UA) 7 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL (logo_ADDA logo_UA #(logo_DIVA logo_UA 4)) 7 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "Greek spiral 8", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 8 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 8 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 8 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL (logo_ADDA #(logo_DIVA logo_UA 4) logo_UA) 8 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL (logo_ADDA logo_UA #(logo_DIVA logo_UA 4)) 8 $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 3", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA logo_epsA 3) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) (logo_DIVL logo_UL logo_IFTY) (logo_MULA logo_epsA 3) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_ADDA (logo_ADDA logo_epsA logo_epsA) logo_epsA) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_ADDA logo_epsA (logo_ADDA logo_epsA logo_epsA)) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_DIVA (logo_SUBA #(logo_DIVA logo_UA 4) logo_epsA) 3) logo_IFTY $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 5", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_DIVA logo_UA 8) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA logo_epsA 5) logo_IFTY $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_GETSET (lambda $0) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA logo_epsA 5) logo_IFTY $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_GETSET (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_DIVA logo_UA 8) logo_IFTY $0)) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_GETSET (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA logo_epsA 5) logo_IFTY $0)) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "smooth spiral 4 slanted by 2pi/2", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA logo_epsA 4) logo_IFTY $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 0 (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA logo_epsA 4) logo_IFTY $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA logo_epsA 4) logo_IFTY (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA logo_epsA 4) logo_IFTY $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL (logo_MULA logo_epsA 4) logo_IFTY $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "star 5", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_MULA (logo_MULA logo_epsA 4) 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_ADDA #(logo_DIVA logo_UA 4) (logo_MULA logo_epsA 6)) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_ADDA (logo_MULA logo_epsA 6) #(logo_DIVA logo_UA 4)) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_MULA (logo_DIVA logo_UA 5) 2) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "star 9", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 9 (logo_DIVA (logo_MULA logo_UA 4) 9) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 9 (logo_MULA (logo_DIVA logo_UA 9) 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 9 (logo_MULA (logo_ADDA (logo_DIVA logo_UA 9) logo_UA) 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 9 (logo_MULA (logo_SUBA (logo_DIVA logo_UA 9) logo_UA) 4) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 9 (logo_SUBA (logo_MULA (logo_DIVA logo_UA 9) 4) logo_UA) (logo_MULL logo_UL 4) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 1.1", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_ZL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_PT (lambda $0) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 1.2", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 0 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_ZL 3) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 2.1", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 1 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_ZL #(logo_DIVA logo_UA 4) 5 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) logo_ZL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL #(logo_DIVA logo_UA 4) 1 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "leaf iteration 2.2", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 1 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_ZL #(logo_DIVA logo_UA 4) 5 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) logo_ZL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL #(logo_DIVA logo_UA 4) 1 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "flower 4", "programs": [{"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 1 $0))))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 1 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL) $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "staircase 5", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) logo_UL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) logo_UL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 0 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 2 #(logo_DIVA logo_UA 4) logo_UL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) (logo_FWRT logo_UL (logo_SUBA logo_UA #(logo_DIVA logo_UA 4)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) (logo_FWRT logo_UL (logo_SUBA logo_ZA #(logo_DIVA logo_UA 4)) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "blocks zigzag 1", "programs": [{"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 #(logo_DIVA logo_UA 4) logo_UL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 #(logo_DIVA logo_UA 4) logo_UL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 0 (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 (logo_SUBA logo_UA #(logo_DIVA logo_UA 4)) logo_UL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 (logo_MULA #(logo_DIVA logo_UA 4) 3) logo_UL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 3 (logo_SUBA logo_ZA #(logo_DIVA logo_UA 4)) logo_UL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 1", "programs": [{"program": "(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 8) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL (logo_MULA logo_epsA 5) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 logo_epsA logo_ZL (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL (logo_MULA logo_epsA 5) (logo_GETSET (lambda $0) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_ZL (logo_MULA logo_epsA 5) (logo_PT (lambda $0) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 1", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 1 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 1 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 2", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 3", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL 3) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL 3) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL 3) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL (logo_MULL logo_UL 3) logo_IFTY) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL (logo_DIVL logo_UL logo_IFTY) 3) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 3", "programs": [{"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL 3) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 4", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 4 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 4 (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 4", "programs": [{"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 4 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 4 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_DIVL logo_UL 5) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "left semicircle of size 5", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL 5) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_GETSET (lambda $0) (logo_FWRT (logo_MULL logo_epsL 5) logo_epsA $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_PT (lambda $0) (logo_FWRT (logo_DIVL logo_UL 4) logo_epsA $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_PT (lambda $0) (logo_FWRT (logo_MULL logo_epsL 5) logo_epsA $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 5", "programs": [{"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 5 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 5 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_DIVL logo_UL 4) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL 5) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "right semicircle of size 6", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 6 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 6 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 6 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle of size 6", "programs": [{"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 6 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 6 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 6 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL 6) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 6 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5 enclosed circles", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) $1 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) $1 $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) $1 $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $1) $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) $1 $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-circle flower l=1", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (logo_FWRT logo_ZL (logo_DIVA logo_UA 3) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 3) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_FWRT logo_ZL (logo_MULA (logo_DIVA logo_UA 3) 4) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (logo_PT (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 3) $0)) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (logo_FWRT logo_ZL (logo_DIVA logo_UA 3) (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) $1 $0))))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3-semicircle sequence L=1", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL logo_UL logo_IFTY) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0)))) 1 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL logo_epsL 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 1 $0)))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "2-semicircle sequence L=2", "programs": [{"program": "(lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0)))) 2 (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0)))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0)))) 2 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0)))) 2 (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0)))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0)))) 2 (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0)))) 2 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0)))) 2 (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0)))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "1-semicircle sequence L=3", "programs": [{"program": "(lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL logo_epsL $1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) $1 $0)))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_DIVL (logo_MULL logo_UL 3) logo_IFTY) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL (logo_DIVL logo_UL logo_IFTY) 3) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL (logo_MULL logo_epsL 1) 3) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) (logo_MULL (logo_MULL logo_epsL 3) 1) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 2 circles", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0)) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 1 logo_UL $0)) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 1 $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 2 lines", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT logo_UL logo_epsA $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "line next to semicircle", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_UL logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_FWRT logo_UL logo_ZA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "3 dashed lines of size (/d 1d 2)", "programs": [{"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL logo_UA 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL logo_UA 5 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL logo_ZA 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_epsL logo_ZA 5 $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT (logo_DIVL logo_UL 2) logo_UA $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "broken circle", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0)) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 1 logo_UL $0)) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (logo_PT (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL logo_UA 2 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 2 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle next to semicircle", "programs": [{"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0)) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0)) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 1 logo_UL $0)) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "circle next to line", "programs": [{"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "line next to circle", "programs": [{"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) (logo_MULL logo_epsL $0))) 1 (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))))))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT $4 logo_epsA $0))) $0))))) logo_epsL (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0)))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 4 dashes", "programs": [{"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_GETSET (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 2 $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (logo_FWRT (logo_MULL logo_UL $2) #(logo_DIVA logo_UA 4) $0)) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_GETSET (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT (logo_MULL $4 $1) $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 2 $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (logo_FWRT (logo_MULL logo_UL $2) #(logo_DIVA logo_UA 4) $0)) (logo_FWRT (logo_MULL logo_epsL logo_IFTY) #(logo_DIVA logo_UA 4) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (logo_FWRT (logo_MULL logo_UL $2) #(logo_DIVA logo_UA 4) $0)) (logo_FWRT (logo_MULL (logo_DIVL logo_UL 3) 3) #(logo_DIVA logo_UA 4) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "row of 5 semicircles", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_GETSET (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_GETSET (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0)) $0)))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL (logo_PT (lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0))) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "6-close semicircle snowflake", "programs": [{"program": "(lambda (logo_forLoop 6 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_epsL $0)) (logo_FWRT logo_ZL (logo_DIVA logo_UA 6) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "7-empty snowflake", "programs": [{"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 7) (logo_GETSET (lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)) (logo_FWRT logo_ZL (logo_DIVA logo_UA 7) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 7) (logo_GETSET (lambda (logo_FWRT logo_UL logo_epsA $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 7) (logo_GETSET (lambda (logo_FWRT logo_UL logo_ZA $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (logo_FWRT logo_UL logo_ZA $0)) (logo_FWRT logo_ZL (logo_DIVA logo_UA 7) $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "4-row of squares", "programs": [{"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL (logo_FWRT logo_UL logo_ZA $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 1 logo_UL $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) logo_UL (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) logo_UL (logo_FWRT logo_UL logo_ZA $0)))) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 1", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) logo_UL $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 1) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_DIVL logo_UL 1) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 logo_UL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 2", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) 2 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) 2 $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "square of size 3", "programs": [{"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 3) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) 3 $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL (logo_MULL logo_UL 1) 3) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL (logo_MULL logo_UL 3) 1) $0))", "logLikelihood": 0.0}, {"program": "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0))) 4 (logo_MULL (logo_DIVL logo_UL 3) 9) $0))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "turtle", "arguments": []}, {"constructor": "turtle", "arguments": []}]}, "task": "5-concentric squares", "programs": [{"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) $1 $0))) $0))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) $1 $0))) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) $1 $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) $1 $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))", "logLikelihood": 0.0}, {"program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $0))) $1 $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA) logo_ZL $0)))", "logLikelihood": 0.0}]}]}