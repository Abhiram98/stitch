def int_comp_eq(a,b):
    return int(a==b)

def int_comp_noteq(a,b):
    return int(a!=b)

inject_int=lambda x: int(x)
inject_big = lambda x: x
inject_bool = lambda x: bool(x)
project_int = lambda x: x
project_big = lambda x: x
project_bool = lambda x: x
is_true = lambda x: x 
is_int = lambda x: type(x) == int
is_bool = lambda x: type(x) == bool
is_big = lambda x: (is_int(x) or is_bool(x)) == False
create_list = lambda x: [1] * x
create_dict = lambda : dict()


def error_pyobj(msg):
    raise Exception("type error")
    

def set_subscript(l, i, v):
    l[i] = v
    return l
    

def get_subscript(l, i):
    return l[i]
    

def __func2(_f1,_g1,free_vars_2):
	_g1 = [_g1]
	def __func1(_x3,free_vars_1):
		temp_7 = inject_int(1)
		temp_8 = inject_int(0)
		temp_9 = free_vars_1[temp_7]
		temp_10 = temp_9[temp_8]
		temp_11 = inject_int(1)
		temp_12 = inject_int(0)
		temp_13 = free_vars_1[temp_11]
		temp_14 = temp_13[temp_12]
		temp_15 = get_fun_ptr(temp_10)
		temp_16 = get_free_vars(temp_14)
		_temp_0 = temp_15(_x3,temp_16)
		temp_17 = inject_int(0)
		temp_18 = inject_int(0)
		temp_19 = free_vars_1[temp_17]
		temp_20 = temp_19[temp_18]
		temp_21 = inject_int(0)
		temp_22 = inject_int(0)
		temp_23 = free_vars_1[temp_21]
		temp_24 = temp_23[temp_22]
		temp_25 = get_fun_ptr(temp_20)
		temp_26 = get_free_vars(temp_24)
		_temp_1 = temp_25(_temp_0,temp_26)
		return _temp_1
	
	temp_27 = [_f1, _g1]
	temp_28 = create_closure(__func1,temp_27)
	__compose = inject_big(temp_28)
	return __compose

temp_29 = []
temp_30 = create_closure(__func2,temp_29)
_compose = inject_big(temp_30)
def __func3(_x1,free_vars_3):
	temp_31 = inject_int(1)
	_temp_2 = _x1 + temp_31
	return _temp_2

temp_32 = []
temp_33 = create_closure(__func3,temp_32)
_f = inject_big(temp_33)
def __func4(_x2,free_vars_4):
	temp_34 = inject_int(1)
	_temp_3 = - temp_34
	_temp_4 = _x2 + _temp_3
	return _temp_4

temp_35 = []
temp_36 = create_closure(__func4,temp_35)
_g = inject_big(temp_36)
temp_37 = get_fun_ptr(_compose)
temp_38 = get_free_vars(_compose)
_temp_5 = temp_37(_f,_g,temp_38)
temp_39 = get_fun_ptr(_temp_5)
temp_40 = inject_int(23)
temp_41 = get_free_vars(_temp_5)
_temp_6 = temp_39(temp_40,temp_41)
print(_temp_6)