compiling /home/jovyan/lab5-team-tyler-and-luke-1/tests/autograde/p2/hard/nested_indent2.py
valid p0
visiting Call
visiting Call
visiting Call
flattening node's  value
visiting Call
visiting Call
flattening node's  value
visiting Call
visiting Call
flattening node's  arg_i
collecting functiondef
collecting functiondef
collecting functiondef
Free-Bound analysis----
fba.free_vars={'__main__': set(), 'fun1': set(), 'fun2': set(), 'fun3': set()}
fba.bound_vars={'__main__': {'fun1', 'temp_2'}, 'fun1': {'x', 'fun2', 'temp_1'}, 'fun2': {'x', 'fun3', 'temp_0'}, 'fun3': {'x'}}
Free-Bound analysis----
fba.free_vars={'__main__': set(), 'fun1': set(), 'fun2': set(), 'fun3': set()}
fba.bound_vars={'__main__': {'fun1', 'temp_2'}, 'fun1': {'x', 'fun2', 'temp_1'}, 'fun2': {'x', 'fun3', 'temp_0'}, 'fun3': {'x'}}
all_free=[]
Before FLATTENING STAGE 1
fun1
inject_big
create_closure
x
fun2
inject_big
create_closure
x
fun3
inject_big
create_closure
x
print
x
x
print
x
temp_0
get_fun_ptr
fun3
get_free_vars
fun3
temp_0
print
x
temp_1
get_fun_ptr
fun2
get_free_vars
fun2
temp_1
temp_2
get_fun_ptr
fun1
get_free_vars
fun1
print
temp_2
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
flattening node's  arg_i
flattening node's  arg_i
flattening node's  arg_i
visiting Call
visiting Call
visiting Call
visiting Call
flattening node's  func
flattening node's  arg_i
flattening node's  arg_i
flattening node's  arg_i
flattening node's  arg_i
visiting Call
visiting Call
visiting Call
visiting Call
flattening node's  func
flattening node's  arg_i
flattening node's  arg_i
flattening node's  arg_i
flattening node's  arg_i
visiting Call
visiting Call
visiting Call
flattening node's  func
flattening node's  arg_i
visiting Call
collecting functiondef
collecting functiondef
collecting functiondef
After FLATTENING STAGE 1
BEGIN EXPLICATE
From visit_Module, node in node.body
<ast.FunctionDef object at 0x7ff44de4b6a0>
RETURN: From visit_Module, node in node.body
<ast.FunctionDef object at 0x7ff44dca4be0>
From visit_Module, node in node.body
<ast.Assign object at 0x7ff44dca4520>
RETURN: From visit_Module, node in node.body
<ast.Assign object at 0x7ff44de4aef0>
From visit_Module, node in node.body
<ast.Assign object at 0x7ff44dca4940>
RETURN: From visit_Module, node in node.body
<ast.Assign object at 0x7ff44dd4f790>
From visit_Module, node in node.body
<ast.Assign object at 0x7ff44de49ba0>
RETURN: From visit_Module, node in node.body
<ast.Assign object at 0x7ff44dd4f700>
From visit_Module, node in node.body
<ast.Assign object at 0x7ff44dca4af0>
RETURN: From visit_Module, node in node.body
<ast.Assign object at 0x7ff44dd4f7f0>
From visit_Module, node in node.body
<ast.Assign object at 0x7ff44dca4c40>
RETURN: From visit_Module, node in node.body
<ast.Assign object at 0x7ff44dd4f820>
From visit_Module, node in node.body
<ast.Assign object at 0x7ff44de4b730>
RETURN: From visit_Module, node in node.body
<ast.Assign object at 0x7ff44dd4f760>
From visit_Module, node in node.body
<ast.Expr object at 0x7ff44de4b670>
RETURN: From visit_Module, node in node.body
<ast.Expr object at 0x7ff44dd4f730>
After Explicate Stage
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
flattening node's  arg_i
flattening node's  arg_i
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
flattening node's  arg_i
flattening node's  arg_i
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
flattening node's  arg_i
flattening node's  arg_i
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
visiting Call
collecting functiondef
collecting functiondef
collecting functiondef
After Flattening Stage 2
self.visit(node.body[0]) =([IrStat((Instruction(call), Keyword(inject_int), Immediate($5), Variable(_x)))], BB102:
)
self.visit(node.body[0]) =([IrStat((Instruction(call), Keyword(inject_int), Immediate($3), Variable(_x)))], BB209:
)
self.visit(node.body[0]) =([IrStat((Instruction(call), Keyword(inject_int), Immediate($1), Variable(_x)))], BB440:
)
self.visit(node.body[0]) =([IrStat((Instruction(call), Keyword(inject_int), Immediate($0), Variable(temp_22)))], BB2:
)
dict_keys(['__func1', '__func2', '__func3', 'module']) = 
Liveness took 3 loops
total_loop_time=0.00018262863159179688
per_basic_block_time=0.00017786026000976562
update_parent_time=1.1920928955078125e-06
Liveness time taken: 0.00021338462829589844
Int graph time taken: 0.00010180473327636719
coloring done
Coloring time taken: 0.0003147125244140625
stack_size=0
done compiling
liveness_time=0.00021338462829589844
interference_time=0.00010180473327636719
coloring_time=0.0003147125244140625
code = '\n.globl main\nmain: \npushl %ebp \nmovl %esp, %ebp \nsubl $0, %esp \npushl %ebx \npushl %esi\npushl %edi\n    \npushl $0 \ncall inject_int\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall create_list\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall inject_big\nmovl %eax, %edi \naddl $4, %esp \nmovl %edi, %eax \npushl %eax \npushl $__func3 \ncall create_closure\nmovl %eax, %edi \naddl $8, %esp \npushl %edi \ncall inject_big\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall get_fun_ptr\nmovl %eax, %ebx \naddl $4, %esp \npushl %edi \ncall get_free_vars\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall *%ebx\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall print_any \naddl $4, %esp \npopl %edi \npopl %esi\npopl %ebx\nmovl $0, %eax \nmovl %ebp, %esp \npopl %ebp \nret\n\n'
GENERATING ASSEMBLY FOR:  __func1
[IrStat((Instruction(call), Keyword(inject_int), Immediate($5), Variable(_x))), IrStat((Instruction(call), Keyword(print), Variable(_x), Variable(None))), IrStat((Instruction(return), Variable(_x)))]
Liveness took 3 loops
total_loop_time=6.341934204101562e-05
per_basic_block_time=5.984306335449219e-05
update_parent_time=7.152557373046875e-07
Liveness time taken: 7.843971252441406e-05
unknown instruction->2:return,_x
Int graph time taken: 3.361701965332031e-05
coloring done
Coloring time taken: 6.318092346191406e-05
Some variable spilled
But instructions ok
stack_size=0
return stat
return
%edi %edi
done compiling
liveness_time=7.843971252441406e-05
interference_time=3.361701965332031e-05
coloring_time=6.318092346191406e-05
code = '\n__func1: \npushl %ebp \nmovl %esp, %ebp \nsubl $0, %esp \npushl %ebx \npushl %esi\npushl %edi\n    \npushl $5 \ncall inject_int\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall print_any \naddl $4, %esp \nmovl %edi, %eax\n\npopl %edi \npopl %esi\npopl %ebx\nmovl %ebp, %esp \npopl %ebp \nret\n\n'
GENERATING ASSEMBLY FOR:  __func2
[IrStat((Instruction(call), Keyword(inject_int), Immediate($3), Variable(_x))), IrStat((Instruction(call), Keyword(inject_int), Immediate($0), Variable(temp_18))), IrStat((Instruction(call), Keyword(create_list), Variable(temp_18), Variable(temp_19))), IrStat((Instruction(call), Keyword(inject_big), Variable(temp_19), Variable(temp_15))), IrStat((Instruction(movl), Variable(temp_15), Variable(temp_3))), IrStat((Instruction(call), Keyword(create_closure), Immediate($__func1), Variable(temp_3), Variable(temp_4))), IrStat((Instruction(call), Keyword(inject_big), Variable(temp_4), Variable(_fun3))), IrStat((Instruction(call), Keyword(print), Variable(_x), Variable(None))), IrStat((Instruction(call), Keyword(get_fun_ptr), Variable(_fun3), Variable(temp_5))), IrStat((Instruction(call), Keyword(get_free_vars), Variable(_fun3), Variable(temp_6))), IrStat((Instruction(call), Variable(temp_5), Variable(temp_6), Variable(_temp_0))), IrStat((Instruction(return), Variable(_temp_0)))]
Liveness took 3 loops
total_loop_time=0.000194549560546875
per_basic_block_time=0.0001914501190185547
update_parent_time=7.152557373046875e-07
Liveness time taken: 0.00020694732666015625
unknown instruction->11:return,_temp_0
Int graph time taken: 0.00014591217041015625
coloring done
Coloring time taken: 0.00029397010803222656
Some variable spilled
But instructions ok
stack_size=0
return stat
return
%edi %edi
done compiling
liveness_time=0.00020694732666015625
interference_time=0.00014591217041015625
coloring_time=0.00029397010803222656
code = '\n__func2: \npushl %ebp \nmovl %esp, %ebp \nsubl $0, %esp \npushl %ebx \npushl %esi\npushl %edi\n    \npushl $3 \ncall inject_int\nmovl %eax, %ebx \naddl $4, %esp \npushl $0 \ncall inject_int\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall create_list\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall inject_big\nmovl %eax, %edi \naddl $4, %esp \nmovl %edi, %eax \npushl %eax \npushl $__func1 \ncall create_closure\nmovl %eax, %edi \naddl $8, %esp \npushl %edi \ncall inject_big\nmovl %eax, %edi \naddl $4, %esp \npushl %ebx \ncall print_any \naddl $4, %esp \npushl %edi \ncall get_fun_ptr\nmovl %eax, %ebx \naddl $4, %esp \npushl %edi \ncall get_free_vars\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall *%ebx\nmovl %eax, %edi \naddl $4, %esp \nmovl %edi, %eax\n\npopl %edi \npopl %esi\npopl %ebx\nmovl %ebp, %esp \npopl %ebp \nret\n\n'
GENERATING ASSEMBLY FOR:  __func3
[IrStat((Instruction(call), Keyword(inject_int), Immediate($1), Variable(_x))), IrStat((Instruction(call), Keyword(inject_int), Immediate($0), Variable(temp_20))), IrStat((Instruction(call), Keyword(create_list), Variable(temp_20), Variable(temp_21))), IrStat((Instruction(call), Keyword(inject_big), Variable(temp_21), Variable(temp_16))), IrStat((Instruction(movl), Variable(temp_16), Variable(temp_7))), IrStat((Instruction(call), Keyword(create_closure), Immediate($__func2), Variable(temp_7), Variable(temp_8))), IrStat((Instruction(call), Keyword(inject_big), Variable(temp_8), Variable(_fun2))), IrStat((Instruction(call), Keyword(print), Variable(_x), Variable(None))), IrStat((Instruction(call), Keyword(get_fun_ptr), Variable(_fun2), Variable(temp_9))), IrStat((Instruction(call), Keyword(get_free_vars), Variable(_fun2), Variable(temp_10))), IrStat((Instruction(call), Variable(temp_9), Variable(temp_10), Variable(_temp_1))), IrStat((Instruction(return), Variable(_temp_1)))]
Liveness took 3 loops
total_loop_time=0.00018358230590820312
per_basic_block_time=0.0001804828643798828
update_parent_time=7.152557373046875e-07
Liveness time taken: 0.00019502639770507812
unknown instruction->11:return,_temp_1
Int graph time taken: 0.0001304149627685547
coloring done
Coloring time taken: 0.0002598762512207031
Some variable spilled
But instructions ok
stack_size=0
return stat
return
%edi %edi
done compiling
liveness_time=0.00019502639770507812
interference_time=0.0001304149627685547
coloring_time=0.0002598762512207031
code = '\n__func3: \npushl %ebp \nmovl %esp, %ebp \nsubl $0, %esp \npushl %ebx \npushl %esi\npushl %edi\n    \npushl $1 \ncall inject_int\nmovl %eax, %ebx \naddl $4, %esp \npushl $0 \ncall inject_int\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall create_list\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall inject_big\nmovl %eax, %edi \naddl $4, %esp \nmovl %edi, %eax \npushl %eax \npushl $__func2 \ncall create_closure\nmovl %eax, %edi \naddl $8, %esp \npushl %edi \ncall inject_big\nmovl %eax, %edi \naddl $4, %esp \npushl %ebx \ncall print_any \naddl $4, %esp \npushl %edi \ncall get_fun_ptr\nmovl %eax, %ebx \naddl $4, %esp \npushl %edi \ncall get_free_vars\nmovl %eax, %edi \naddl $4, %esp \npushl %edi \ncall *%ebx\nmovl %eax, %edi \naddl $4, %esp \nmovl %edi, %eax\n\npopl %edi \npopl %esi\npopl %ebx\nmovl %ebp, %esp \npopl %ebp \nret\n\n'
