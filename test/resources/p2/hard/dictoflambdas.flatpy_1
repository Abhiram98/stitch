def int_comp_eq(a,b):
    return int(a==b)

def int_comp_noteq(a,b):
    return int(a!=b)

inject_int=lambda x: int(x)
inject_big = lambda x: x
inject_bool = lambda x: bool(x)
project_int = lambda x: x
project_big = lambda x: x
project_bool = lambda x: x
is_true = lambda x: x 
is_int = lambda x: type(x) == int
is_bool = lambda x: type(x) == bool
is_big = lambda x: (is_int(x) or is_bool(x)) == False
create_list = lambda x: [1] * x
create_dict = lambda : dict()


def error_pyobj(msg):
    raise Exception("type error")
    

def set_subscript(l, i, v):
    l[i] = v
    return l
    

def get_subscript(l, i):
    return l[i]
    

temp_5 = inject_int(0)
temp_33 = inject_int(1)
temp_34 = create_list(temp_33)
temp_29 = inject_big(temp_34)
temp_35 = inject_int(0)
set_subscript(temp_29,temp_35,temp_5)
_temp_0 = temp_29
def __func1(_x,free_vars_1):
	temp_6 = inject_int(0)
	temp_7 = inject_int(0)
	temp_8 = get_subscript(free_vars_1,temp_6)
	temp_9 = get_subscript(temp_8,temp_7)
	temp_62 = is_int(_x)
	if temp_62:
		temp_44 = is_int(temp_9)
		if temp_44:
			temp_36 = project_int(_x)
			temp_37 = project_int(temp_9)
			temp_38 = temp_36 + temp_37
			temp_10 = inject_int(temp_38)
		else:
			temp_43 = is_big(temp_9)
			if temp_43:
				error_pyobj()
			else:
				temp_42 = is_bool(temp_9)
				if temp_42:
					temp_39 = project_int(_x)
					temp_40 = project_bool(temp_9)
					temp_41 = temp_39 + temp_40
					temp_10 = inject_int(temp_41)
				else:
					error_pyobj()
				
			
		
	else:
		temp_61 = is_big(_x)
		if temp_61:
			temp_50 = is_int(temp_9)
			if temp_50:
				error_pyobj()
			else:
				temp_49 = is_big(temp_9)
				if temp_49:
					temp_45 = project_big(_x)
					temp_46 = project_big(temp_9)
					temp_47 = add(temp_45,temp_46)
					temp_10 = inject_big(temp_47)
				else:
					temp_48 = is_bool(temp_9)
					if temp_48:
						error_pyobj()
					else:
						error_pyobj()
					
				
			
		else:
			temp_60 = is_bool(_x)
			if temp_60:
				temp_59 = is_int(temp_9)
				if temp_59:
					temp_51 = project_bool(_x)
					temp_52 = project_int(temp_9)
					temp_53 = temp_51 + temp_52
					temp_10 = inject_int(temp_53)
				else:
					temp_58 = is_big(temp_9)
					if temp_58:
						error_pyobj()
					else:
						temp_57 = is_bool(temp_9)
						if temp_57:
							temp_54 = project_bool(_x)
							temp_55 = project_bool(temp_9)
							temp_56 = temp_54 + temp_55
							temp_10 = inject_bool(temp_56)
						else:
							error_pyobj()
						
					
				
			else:
				error_pyobj()
			
		
	
	temp_10 = temp_10
	return temp_10

temp_63 = inject_int(1)
temp_64 = create_list(temp_63)
temp_30 = inject_big(temp_64)
temp_65 = inject_int(0)
set_subscript(temp_30,temp_65,_temp_0)
temp_11 = temp_30
temp_12 = create_closure(__func1,temp_11)
_lambda_2 = inject_big(temp_12)
def __func2(_x,free_vars_2):
	temp_13 = inject_int(1)
	temp_92 = is_int(_x)
	if temp_92:
		temp_74 = is_int(temp_13)
		if temp_74:
			temp_66 = project_int(_x)
			temp_67 = project_int(temp_13)
			temp_68 = temp_66 + temp_67
			temp_14 = inject_int(temp_68)
		else:
			temp_73 = is_big(temp_13)
			if temp_73:
				error_pyobj()
			else:
				temp_72 = is_bool(temp_13)
				if temp_72:
					temp_69 = project_int(_x)
					temp_70 = project_bool(temp_13)
					temp_71 = temp_69 + temp_70
					temp_14 = inject_int(temp_71)
				else:
					error_pyobj()
				
			
		
	else:
		temp_91 = is_big(_x)
		if temp_91:
			temp_80 = is_int(temp_13)
			if temp_80:
				error_pyobj()
			else:
				temp_79 = is_big(temp_13)
				if temp_79:
					temp_75 = project_big(_x)
					temp_76 = project_big(temp_13)
					temp_77 = add(temp_75,temp_76)
					temp_14 = inject_big(temp_77)
				else:
					temp_78 = is_bool(temp_13)
					if temp_78:
						error_pyobj()
					else:
						error_pyobj()
					
				
			
		else:
			temp_90 = is_bool(_x)
			if temp_90:
				temp_89 = is_int(temp_13)
				if temp_89:
					temp_81 = project_bool(_x)
					temp_82 = project_int(temp_13)
					temp_83 = temp_81 + temp_82
					temp_14 = inject_int(temp_83)
				else:
					temp_88 = is_big(temp_13)
					if temp_88:
						error_pyobj()
					else:
						temp_87 = is_bool(temp_13)
						if temp_87:
							temp_84 = project_bool(_x)
							temp_85 = project_bool(temp_13)
							temp_86 = temp_84 + temp_85
							temp_14 = inject_bool(temp_86)
						else:
							error_pyobj()
						
					
				
			else:
				error_pyobj()
			
		
	
	temp_14 = temp_14
	return temp_14

temp_93 = inject_int(0)
temp_94 = create_list(temp_93)
temp_31 = inject_big(temp_94)
temp_15 = temp_31
temp_16 = create_closure(__func2,temp_15)
_lambda_1 = inject_big(temp_16)
temp_17 = inject_int(0)
temp_18 = inject_int(1)
temp_95 = - temp_18
set_subscript(_temp_0,temp_17,temp_95)
temp_19 = inject_int(1)
temp_20 = inject_int(2)
temp_96 = create_dict()
temp_32 = inject_big(temp_96)
set_subscript(temp_32,temp_20,_lambda_2)
set_subscript(temp_32,temp_19,_lambda_1)
_x = temp_32
temp_21 = inject_int(1)
_temp_1 = get_subscript(_x,temp_21)
temp_22 = get_fun_ptr(_temp_1)
temp_23 = inject_int(23)
temp_24 = get_free_vars(_temp_1)
_temp_2 = temp_22(temp_23,temp_24)
print(_temp_2)
temp_25 = inject_int(2)
_temp_3 = get_subscript(_x,temp_25)
temp_26 = get_fun_ptr(_temp_3)
temp_27 = inject_int(23)
temp_28 = get_free_vars(_temp_3)
_temp_4 = temp_26(temp_27,temp_28)
print(_temp_4)