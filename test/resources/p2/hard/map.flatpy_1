def int_comp_eq(a,b):
    return int(a==b)

def int_comp_noteq(a,b):
    return int(a!=b)

inject_int=lambda x: int(x)
inject_big = lambda x: x
inject_bool = lambda x: bool(x)
project_int = lambda x: x
project_big = lambda x: x
project_bool = lambda x: x
is_true = lambda x: x 
is_int = lambda x: type(x) == int
is_bool = lambda x: type(x) == bool
is_big = lambda x: (is_int(x) or is_bool(x)) == False
create_list = lambda x: [1] * x
create_dict = lambda : dict()


def error_pyobj(msg):
    raise Exception("type error")
    

def set_subscript(l, i, v):
    l[i] = v
    return l
    

def get_subscript(l, i):
    return l[i]
    

temp_11 = inject_int(0)
temp_84 = inject_int(1)
temp_85 = create_list(temp_84)
temp_78 = inject_big(temp_85)
temp_86 = inject_int(0)
set_subscript(temp_78,temp_86,temp_11)
_map = temp_78
def __func1(_x,free_vars_1):
	temp_12 = inject_int(1)
	temp_113 = is_int(_x)
	if temp_113:
		temp_95 = is_int(temp_12)
		if temp_95:
			temp_87 = project_int(_x)
			temp_88 = project_int(temp_12)
			temp_89 = temp_87 + temp_88
			temp_13 = inject_int(temp_89)
		else:
			temp_94 = is_big(temp_12)
			if temp_94:
				error_pyobj()
			else:
				temp_93 = is_bool(temp_12)
				if temp_93:
					temp_90 = project_int(_x)
					temp_91 = project_bool(temp_12)
					temp_92 = temp_90 + temp_91
					temp_13 = inject_int(temp_92)
				else:
					error_pyobj()
				
			
		
	else:
		temp_112 = is_big(_x)
		if temp_112:
			temp_101 = is_int(temp_12)
			if temp_101:
				error_pyobj()
			else:
				temp_100 = is_big(temp_12)
				if temp_100:
					temp_96 = project_big(_x)
					temp_97 = project_big(temp_12)
					temp_98 = add(temp_96,temp_97)
					temp_13 = inject_big(temp_98)
				else:
					temp_99 = is_bool(temp_12)
					if temp_99:
						error_pyobj()
					else:
						error_pyobj()
					
				
			
		else:
			temp_111 = is_bool(_x)
			if temp_111:
				temp_110 = is_int(temp_12)
				if temp_110:
					temp_102 = project_bool(_x)
					temp_103 = project_int(temp_12)
					temp_104 = temp_102 + temp_103
					temp_13 = inject_int(temp_104)
				else:
					temp_109 = is_big(temp_12)
					if temp_109:
						error_pyobj()
					else:
						temp_108 = is_bool(temp_12)
						if temp_108:
							temp_105 = project_bool(_x)
							temp_106 = project_bool(temp_12)
							temp_107 = temp_105 + temp_106
							temp_13 = inject_bool(temp_107)
						else:
							error_pyobj()
						
					
				
			else:
				error_pyobj()
			
		
	
	temp_13 = temp_13
	return temp_13

temp_114 = inject_int(0)
temp_115 = create_list(temp_114)
temp_79 = inject_big(temp_115)
temp_14 = temp_79
temp_15 = create_closure(__func1,temp_14)
_lambda_1 = inject_big(temp_15)
temp_16 = inject_int(0)
def __func2(_f,_l,_i,_n,free_vars_2):
	temp_17 = inject_int(3)
	temp_18 = inject_int(0)
	temp_19 = get_subscript(free_vars_2,temp_17)
	temp_20 = get_subscript(temp_19,temp_18)
	temp_138 = is_int(temp_20)
	if temp_138:
		temp_117 = is_int(_n)
		if temp_117:
			temp_116 = temp_20 != _n
			_temp_5 = inject_bool(temp_116)
		
		temp_121 = is_bool(_n)
		if temp_121:
			temp_118 = project_int(temp_20)
			temp_119 = project_bool(_n)
			temp_120 = temp_118 != temp_119
			_temp_5 = inject_bool(temp_120)
		
		temp_122 = is_big(_n)
		if temp_122:
			_temp_5 = inject_bool(1)
		
	else:
		temp_137 = is_bool(temp_20)
		if temp_137:
			temp_126 = is_int(_n)
			if temp_126:
				temp_123 = project_bool(temp_20)
				temp_124 = project_int(_n)
				temp_125 = temp_123 != temp_124
				_temp_5 = inject_bool(temp_125)
			
			temp_128 = is_bool(_n)
			if temp_128:
				temp_127 = temp_20 != _n
				_temp_5 = inject_bool(temp_127)
			
			temp_129 = is_big(_n)
			if temp_129:
				_temp_5 = inject_bool(1)
			
		else:
			temp_136 = is_big(temp_20)
			if temp_136:
				temp_130 = is_int(_n)
				if temp_130:
					_temp_5 = inject_bool(1)
				
				temp_131 = is_bool(_n)
				if temp_131:
					_temp_5 = inject_bool(1)
				
				temp_135 = is_big(_n)
				if temp_135:
					temp_132 = project_big(temp_20)
					temp_133 = project_big(_n)
					temp_134 = not_equal(temp_132,temp_133)
					_temp_5 = inject_bool(temp_134)
				
			
		
	
	_temp_5 = _temp_5
	temp_21 = is_true(_temp_5)
	temp_63 = is_true(temp_21)
	if temp_63:
		temp_22 = inject_int(0)
		temp_23 = inject_int(0)
		temp_24 = get_subscript(free_vars_2,temp_22)
		temp_25 = inject_int(3)
		temp_26 = inject_int(0)
		temp_27 = get_subscript(free_vars_2,temp_25)
		temp_28 = get_subscript(temp_27,temp_26)
		temp_29 = get_subscript(temp_24,temp_23)
		_temp_0 = get_subscript(temp_29,temp_28)
		temp_30 = inject_int(2)
		temp_31 = inject_int(0)
		temp_32 = get_subscript(free_vars_2,temp_30)
		temp_33 = get_subscript(temp_32,temp_31)
		temp_34 = inject_int(2)
		temp_35 = inject_int(0)
		temp_36 = get_subscript(free_vars_2,temp_34)
		temp_37 = get_subscript(temp_36,temp_35)
		temp_38 = get_fun_ptr(temp_33)
		temp_39 = get_free_vars(temp_37)
		_temp_1 = temp_38(_temp_0,temp_39)
		temp_40 = inject_int(3)
		temp_41 = inject_int(0)
		temp_42 = get_subscript(free_vars_2,temp_40)
		temp_43 = get_subscript(temp_42,temp_41)
		temp_44 = inject_int(1)
		temp_165 = is_int(temp_43)
		if temp_165:
			temp_147 = is_int(temp_44)
			if temp_147:
				temp_139 = project_int(temp_43)
				temp_140 = project_int(temp_44)
				temp_141 = temp_139 + temp_140
				_temp_2 = inject_int(temp_141)
			else:
				temp_146 = is_big(temp_44)
				if temp_146:
					error_pyobj()
				else:
					temp_145 = is_bool(temp_44)
					if temp_145:
						temp_142 = project_int(temp_43)
						temp_143 = project_bool(temp_44)
						temp_144 = temp_142 + temp_143
						_temp_2 = inject_int(temp_144)
					else:
						error_pyobj()
					
				
			
		else:
			temp_164 = is_big(temp_43)
			if temp_164:
				temp_153 = is_int(temp_44)
				if temp_153:
					error_pyobj()
				else:
					temp_152 = is_big(temp_44)
					if temp_152:
						temp_148 = project_big(temp_43)
						temp_149 = project_big(temp_44)
						temp_150 = add(temp_148,temp_149)
						_temp_2 = inject_big(temp_150)
					else:
						temp_151 = is_bool(temp_44)
						if temp_151:
							error_pyobj()
						else:
							error_pyobj()
						
					
				
			else:
				temp_163 = is_bool(temp_43)
				if temp_163:
					temp_162 = is_int(temp_44)
					if temp_162:
						temp_154 = project_bool(temp_43)
						temp_155 = project_int(temp_44)
						temp_156 = temp_154 + temp_155
						_temp_2 = inject_int(temp_156)
					else:
						temp_161 = is_big(temp_44)
						if temp_161:
							error_pyobj()
						else:
							temp_160 = is_bool(temp_44)
							if temp_160:
								temp_157 = project_bool(temp_43)
								temp_158 = project_bool(temp_44)
								temp_159 = temp_157 + temp_158
								_temp_2 = inject_bool(temp_159)
							else:
								error_pyobj()
							
						
					
				else:
					error_pyobj()
				
			
		
		_temp_2 = _temp_2
		temp_166 = inject_int(1)
		temp_167 = create_list(temp_166)
		temp_80 = inject_big(temp_167)
		temp_168 = inject_int(0)
		set_subscript(temp_80,temp_168,_temp_1)
		_temp_3 = temp_80
		temp_45 = inject_int(1)
		temp_46 = inject_int(0)
		temp_47 = get_subscript(free_vars_2,temp_45)
		temp_48 = get_subscript(temp_47,temp_46)
		temp_49 = inject_int(2)
		temp_50 = inject_int(0)
		temp_51 = get_subscript(free_vars_2,temp_49)
		temp_52 = inject_int(0)
		temp_53 = inject_int(0)
		temp_54 = get_subscript(free_vars_2,temp_52)
		temp_55 = inject_int(1)
		temp_56 = inject_int(0)
		temp_57 = get_subscript(free_vars_2,temp_55)
		temp_58 = get_subscript(temp_57,temp_56)
		temp_59 = get_fun_ptr(temp_48)
		temp_60 = get_subscript(temp_51,temp_50)
		temp_61 = get_subscript(temp_54,temp_53)
		temp_62 = get_free_vars(temp_58)
		_temp_4 = temp_59(temp_60,temp_61,_temp_2,_n,temp_62)
		temp_195 = is_int(_temp_3)
		if temp_195:
			temp_177 = is_int(_temp_4)
			if temp_177:
				temp_169 = project_int(_temp_3)
				temp_170 = project_int(_temp_4)
				temp_171 = temp_169 + temp_170
				_temp_6 = inject_int(temp_171)
			else:
				temp_176 = is_big(_temp_4)
				if temp_176:
					error_pyobj()
				else:
					temp_175 = is_bool(_temp_4)
					if temp_175:
						temp_172 = project_int(_temp_3)
						temp_173 = project_bool(_temp_4)
						temp_174 = temp_172 + temp_173
						_temp_6 = inject_int(temp_174)
					else:
						error_pyobj()
					
				
			
		else:
			temp_194 = is_big(_temp_3)
			if temp_194:
				temp_183 = is_int(_temp_4)
				if temp_183:
					error_pyobj()
				else:
					temp_182 = is_big(_temp_4)
					if temp_182:
						temp_178 = project_big(_temp_3)
						temp_179 = project_big(_temp_4)
						temp_180 = add(temp_178,temp_179)
						_temp_6 = inject_big(temp_180)
					else:
						temp_181 = is_bool(_temp_4)
						if temp_181:
							error_pyobj()
						else:
							error_pyobj()
						
					
				
			else:
				temp_193 = is_bool(_temp_3)
				if temp_193:
					temp_192 = is_int(_temp_4)
					if temp_192:
						temp_184 = project_bool(_temp_3)
						temp_185 = project_int(_temp_4)
						temp_186 = temp_184 + temp_185
						_temp_6 = inject_int(temp_186)
					else:
						temp_191 = is_big(_temp_4)
						if temp_191:
							error_pyobj()
						else:
							temp_190 = is_bool(_temp_4)
							if temp_190:
								temp_187 = project_bool(_temp_3)
								temp_188 = project_bool(_temp_4)
								temp_189 = temp_187 + temp_188
								_temp_6 = inject_bool(temp_189)
							else:
								error_pyobj()
							
						
					
				else:
					error_pyobj()
				
			
		
		_temp_6 = _temp_6
		_temp_8 = _temp_6
	else:
		temp_196 = inject_int(0)
		temp_197 = create_list(temp_196)
		temp_81 = inject_big(temp_197)
		_temp_7 = temp_81
		_temp_8 = _temp_7
	
	return _temp_8

temp_198 = inject_int(4)
temp_199 = create_list(temp_198)
temp_82 = inject_big(temp_199)
temp_200 = inject_int(0)
set_subscript(temp_82,temp_200,_l)
temp_201 = inject_int(1)
set_subscript(temp_82,temp_201,_map)
temp_202 = inject_int(2)
set_subscript(temp_82,temp_202,_f)
temp_203 = inject_int(3)
set_subscript(temp_82,temp_203,_i)
temp_64 = temp_82
temp_65 = create_closure(__func2,temp_64)
temp_204 = inject_big(temp_65)
set_subscript(_map,temp_16,temp_204)
temp_66 = inject_int(1)
temp_67 = inject_int(2)
temp_68 = inject_int(3)
temp_69 = inject_int(4)
temp_205 = inject_int(4)
temp_206 = create_list(temp_205)
temp_83 = inject_big(temp_206)
temp_207 = inject_int(0)
set_subscript(temp_83,temp_207,temp_66)
temp_208 = inject_int(1)
set_subscript(temp_83,temp_208,temp_67)
temp_209 = inject_int(2)
set_subscript(temp_83,temp_209,temp_68)
temp_210 = inject_int(3)
set_subscript(temp_83,temp_210,temp_69)
_temp_9 = temp_83
temp_70 = inject_int(0)
temp_71 = get_subscript(_map,temp_70)
temp_72 = inject_int(0)
temp_73 = get_subscript(_map,temp_72)
temp_74 = get_fun_ptr(temp_71)
temp_75 = inject_int(0)
temp_76 = inject_int(4)
temp_77 = get_free_vars(temp_73)
_temp_10 = temp_74(_lambda_1,_temp_9,temp_75,temp_76,temp_77)
print(_temp_10)