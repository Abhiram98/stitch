def int_comp_eq(a,b):
    return int(a==b)

def int_comp_noteq(a,b):
    return int(a!=b)

inject_int=lambda x: int(x)
inject_big = lambda x: x
inject_bool = lambda x: bool(x)
project_int = lambda x: x
project_big = lambda x: x
project_bool = lambda x: x
is_true = lambda x: x 
is_int = lambda x: type(x) == int
is_bool = lambda x: type(x) == bool
is_big = lambda x: (is_int(x) or is_bool(x)) == False
create_list = lambda x: [1] * x
create_dict = lambda : dict()


def error_pyobj(msg):
    raise Exception("type error")
    

def set_subscript(l, i, v):
    l[i] = v
    return l
    

def get_subscript(l, i):
    return l[i]
    

temp_15 = inject_int(0)
temp_75 = inject_int(1)
temp_76 = create_list(temp_75)
temp_70 = inject_big(temp_76)
temp_77 = inject_int(0)
set_subscript(temp_70,temp_77,temp_15)
_prod = temp_70
def __func1(_a,_b,free_vars_1):
	temp_16 = inject_int(0)
	temp_17 = inject_int(0)
	temp_18 = get_subscript(free_vars_1,temp_16)
	temp_19 = get_subscript(temp_18,temp_17)
	temp_104 = is_int(temp_19)
	if temp_104:
		temp_86 = is_int(_b)
		if temp_86:
			temp_78 = project_int(temp_19)
			temp_79 = project_int(_b)
			temp_80 = temp_78 + temp_79
			_temp_0 = inject_int(temp_80)
		else:
			temp_85 = is_big(_b)
			if temp_85:
				error_pyobj()
			else:
				temp_84 = is_bool(_b)
				if temp_84:
					temp_81 = project_int(temp_19)
					temp_82 = project_bool(_b)
					temp_83 = temp_81 + temp_82
					_temp_0 = inject_int(temp_83)
				else:
					error_pyobj()
				
			
		
	else:
		temp_103 = is_big(temp_19)
		if temp_103:
			temp_92 = is_int(_b)
			if temp_92:
				error_pyobj()
			else:
				temp_91 = is_big(_b)
				if temp_91:
					temp_87 = project_big(temp_19)
					temp_88 = project_big(_b)
					temp_89 = add(temp_87,temp_88)
					_temp_0 = inject_big(temp_89)
				else:
					temp_90 = is_bool(_b)
					if temp_90:
						error_pyobj()
					else:
						error_pyobj()
					
				
			
		else:
			temp_102 = is_bool(temp_19)
			if temp_102:
				temp_101 = is_int(_b)
				if temp_101:
					temp_93 = project_bool(temp_19)
					temp_94 = project_int(_b)
					temp_95 = temp_93 + temp_94
					_temp_0 = inject_int(temp_95)
				else:
					temp_100 = is_big(_b)
					if temp_100:
						error_pyobj()
					else:
						temp_99 = is_bool(_b)
						if temp_99:
							temp_96 = project_bool(temp_19)
							temp_97 = project_bool(_b)
							temp_98 = temp_96 + temp_97
							_temp_0 = inject_bool(temp_98)
						else:
							error_pyobj()
						
					
				
			else:
				error_pyobj()
			
		
	
	_temp_0 = _temp_0
	return _temp_0

temp_105 = inject_int(1)
temp_106 = create_list(temp_105)
temp_71 = inject_big(temp_106)
temp_107 = inject_int(0)
set_subscript(temp_71,temp_107,_a)
temp_20 = temp_71
temp_21 = create_closure(__func1,temp_20)
_sum = inject_big(temp_21)
temp_22 = inject_int(0)
def __func2(_a,_b,free_vars_2):
	temp_23 = inject_int(0)
	temp_130 = is_int(_b)
	if temp_130:
		temp_109 = is_int(temp_23)
		if temp_109:
			temp_108 = _b == temp_23
			_temp_4 = inject_bool(temp_108)
		
		temp_113 = is_bool(temp_23)
		if temp_113:
			temp_110 = project_int(_b)
			temp_111 = project_bool(temp_23)
			temp_112 = temp_110 == temp_111
			_temp_4 = inject_bool(temp_112)
		
		temp_114 = is_big(temp_23)
		if temp_114:
			_temp_4 = inject_bool(0)
		
	else:
		temp_129 = is_bool(_b)
		if temp_129:
			temp_118 = is_int(temp_23)
			if temp_118:
				temp_115 = project_bool(_b)
				temp_116 = project_int(temp_23)
				temp_117 = temp_115 == temp_116
				_temp_4 = inject_bool(temp_117)
			
			temp_120 = is_bool(temp_23)
			if temp_120:
				temp_119 = _b == temp_23
				_temp_4 = inject_bool(temp_119)
			
			temp_121 = is_big(temp_23)
			if temp_121:
				_temp_4 = inject_bool(0)
			
		else:
			temp_128 = is_big(_b)
			if temp_128:
				temp_122 = is_int(temp_23)
				if temp_122:
					_temp_4 = inject_bool(0)
				
				temp_123 = is_bool(temp_23)
				if temp_123:
					_temp_4 = inject_bool(0)
				
				temp_127 = is_big(temp_23)
				if temp_127:
					temp_124 = project_big(_b)
					temp_125 = project_big(temp_23)
					temp_126 = equal(temp_124,temp_125)
					_temp_4 = inject_bool(temp_126)
				
			
		
	
	_temp_4 = _temp_4
	temp_24 = is_true(_temp_4)
	temp_44 = is_true(temp_24)
	if temp_44:
		_temp_6 = inject_int(0)
	else:
		temp_25 = inject_int(1)
		_temp_1 = - temp_25
		temp_157 = is_int(_b)
		if temp_157:
			temp_139 = is_int(_temp_1)
			if temp_139:
				temp_131 = project_int(_b)
				temp_132 = project_int(_temp_1)
				temp_133 = temp_131 + temp_132
				_temp_2 = inject_int(temp_133)
			else:
				temp_138 = is_big(_temp_1)
				if temp_138:
					error_pyobj()
				else:
					temp_137 = is_bool(_temp_1)
					if temp_137:
						temp_134 = project_int(_b)
						temp_135 = project_bool(_temp_1)
						temp_136 = temp_134 + temp_135
						_temp_2 = inject_int(temp_136)
					else:
						error_pyobj()
					
				
			
		else:
			temp_156 = is_big(_b)
			if temp_156:
				temp_145 = is_int(_temp_1)
				if temp_145:
					error_pyobj()
				else:
					temp_144 = is_big(_temp_1)
					if temp_144:
						temp_140 = project_big(_b)
						temp_141 = project_big(_temp_1)
						temp_142 = add(temp_140,temp_141)
						_temp_2 = inject_big(temp_142)
					else:
						temp_143 = is_bool(_temp_1)
						if temp_143:
							error_pyobj()
						else:
							error_pyobj()
						
					
				
			else:
				temp_155 = is_bool(_b)
				if temp_155:
					temp_154 = is_int(_temp_1)
					if temp_154:
						temp_146 = project_bool(_b)
						temp_147 = project_int(_temp_1)
						temp_148 = temp_146 + temp_147
						_temp_2 = inject_int(temp_148)
					else:
						temp_153 = is_big(_temp_1)
						if temp_153:
							error_pyobj()
						else:
							temp_152 = is_bool(_temp_1)
							if temp_152:
								temp_149 = project_bool(_b)
								temp_150 = project_bool(_temp_1)
								temp_151 = temp_149 + temp_150
								_temp_2 = inject_bool(temp_151)
							else:
								error_pyobj()
							
						
					
				else:
					error_pyobj()
				
			
		
		_temp_2 = _temp_2
		temp_26 = inject_int(1)
		temp_27 = inject_int(0)
		temp_28 = get_subscript(free_vars_2,temp_26)
		temp_29 = get_subscript(temp_28,temp_27)
		temp_30 = inject_int(0)
		temp_31 = inject_int(0)
		temp_32 = get_subscript(free_vars_2,temp_30)
		temp_33 = inject_int(1)
		temp_34 = inject_int(0)
		temp_35 = get_subscript(free_vars_2,temp_33)
		temp_36 = get_subscript(temp_35,temp_34)
		temp_37 = get_fun_ptr(temp_29)
		temp_38 = get_subscript(temp_32,temp_31)
		temp_39 = get_free_vars(temp_36)
		_temp_3 = temp_37(temp_38,_temp_2,temp_39)
		temp_40 = inject_int(0)
		temp_41 = inject_int(0)
		temp_42 = get_subscript(free_vars_2,temp_40)
		temp_43 = get_subscript(temp_42,temp_41)
		temp_184 = is_int(temp_43)
		if temp_184:
			temp_166 = is_int(_temp_3)
			if temp_166:
				temp_158 = project_int(temp_43)
				temp_159 = project_int(_temp_3)
				temp_160 = temp_158 + temp_159
				_temp_5 = inject_int(temp_160)
			else:
				temp_165 = is_big(_temp_3)
				if temp_165:
					error_pyobj()
				else:
					temp_164 = is_bool(_temp_3)
					if temp_164:
						temp_161 = project_int(temp_43)
						temp_162 = project_bool(_temp_3)
						temp_163 = temp_161 + temp_162
						_temp_5 = inject_int(temp_163)
					else:
						error_pyobj()
					
				
			
		else:
			temp_183 = is_big(temp_43)
			if temp_183:
				temp_172 = is_int(_temp_3)
				if temp_172:
					error_pyobj()
				else:
					temp_171 = is_big(_temp_3)
					if temp_171:
						temp_167 = project_big(temp_43)
						temp_168 = project_big(_temp_3)
						temp_169 = add(temp_167,temp_168)
						_temp_5 = inject_big(temp_169)
					else:
						temp_170 = is_bool(_temp_3)
						if temp_170:
							error_pyobj()
						else:
							error_pyobj()
						
					
				
			else:
				temp_182 = is_bool(temp_43)
				if temp_182:
					temp_181 = is_int(_temp_3)
					if temp_181:
						temp_173 = project_bool(temp_43)
						temp_174 = project_int(_temp_3)
						temp_175 = temp_173 + temp_174
						_temp_5 = inject_int(temp_175)
					else:
						temp_180 = is_big(_temp_3)
						if temp_180:
							error_pyobj()
						else:
							temp_179 = is_bool(_temp_3)
							if temp_179:
								temp_176 = project_bool(temp_43)
								temp_177 = project_bool(_temp_3)
								temp_178 = temp_176 + temp_177
								_temp_5 = inject_bool(temp_178)
							else:
								error_pyobj()
							
						
					
				else:
					error_pyobj()
				
			
		
		_temp_5 = _temp_5
		_temp_6 = _temp_5
	
	return _temp_6

temp_185 = inject_int(2)
temp_186 = create_list(temp_185)
temp_72 = inject_big(temp_186)
temp_187 = inject_int(0)
set_subscript(temp_72,temp_187,_a)
temp_188 = inject_int(1)
set_subscript(temp_72,temp_188,_prod)
temp_45 = temp_72
temp_46 = create_closure(__func2,temp_45)
temp_189 = inject_big(temp_46)
set_subscript(_prod,temp_22,temp_189)
def __func3(_a,_b,free_vars_3):
	_temp_7 = - _b
	temp_47 = inject_int(0)
	temp_48 = inject_int(0)
	temp_49 = get_subscript(free_vars_3,temp_47)
	temp_50 = get_subscript(temp_49,temp_48)
	temp_216 = is_int(temp_50)
	if temp_216:
		temp_198 = is_int(_temp_7)
		if temp_198:
			temp_190 = project_int(temp_50)
			temp_191 = project_int(_temp_7)
			temp_192 = temp_190 + temp_191
			_temp_8 = inject_int(temp_192)
		else:
			temp_197 = is_big(_temp_7)
			if temp_197:
				error_pyobj()
			else:
				temp_196 = is_bool(_temp_7)
				if temp_196:
					temp_193 = project_int(temp_50)
					temp_194 = project_bool(_temp_7)
					temp_195 = temp_193 + temp_194
					_temp_8 = inject_int(temp_195)
				else:
					error_pyobj()
				
			
		
	else:
		temp_215 = is_big(temp_50)
		if temp_215:
			temp_204 = is_int(_temp_7)
			if temp_204:
				error_pyobj()
			else:
				temp_203 = is_big(_temp_7)
				if temp_203:
					temp_199 = project_big(temp_50)
					temp_200 = project_big(_temp_7)
					temp_201 = add(temp_199,temp_200)
					_temp_8 = inject_big(temp_201)
				else:
					temp_202 = is_bool(_temp_7)
					if temp_202:
						error_pyobj()
					else:
						error_pyobj()
					
				
			
		else:
			temp_214 = is_bool(temp_50)
			if temp_214:
				temp_213 = is_int(_temp_7)
				if temp_213:
					temp_205 = project_bool(temp_50)
					temp_206 = project_int(_temp_7)
					temp_207 = temp_205 + temp_206
					_temp_8 = inject_int(temp_207)
				else:
					temp_212 = is_big(_temp_7)
					if temp_212:
						error_pyobj()
					else:
						temp_211 = is_bool(_temp_7)
						if temp_211:
							temp_208 = project_bool(temp_50)
							temp_209 = project_bool(_temp_7)
							temp_210 = temp_208 + temp_209
							_temp_8 = inject_bool(temp_210)
						else:
							error_pyobj()
						
					
				
			else:
				error_pyobj()
			
		
	
	_temp_8 = _temp_8
	return _temp_8

temp_217 = inject_int(1)
temp_218 = create_list(temp_217)
temp_73 = inject_big(temp_218)
temp_219 = inject_int(0)
set_subscript(temp_73,temp_219,_a)
temp_51 = temp_73
temp_52 = create_closure(__func3,temp_51)
_sub = inject_big(temp_52)
temp_53 = inject_int(0)
temp_54 = get_subscript(_prod,temp_53)
temp_220 = inject_int(3)
temp_221 = create_list(temp_220)
temp_74 = inject_big(temp_221)
temp_222 = inject_int(0)
set_subscript(temp_74,temp_222,_sum)
temp_223 = inject_int(1)
set_subscript(temp_74,temp_223,temp_54)
temp_224 = inject_int(2)
set_subscript(temp_74,temp_224,_sub)
_x = temp_74
temp_55 = inject_int(0)
_temp_9 = get_subscript(_x,temp_55)
temp_56 = get_fun_ptr(_temp_9)
temp_57 = inject_int(1)
temp_58 = inject_int(2)
temp_59 = get_free_vars(_temp_9)
_temp_10 = temp_56(temp_57,temp_58,temp_59)
print(_temp_10)
temp_60 = inject_int(1)
_temp_11 = get_subscript(_x,temp_60)
temp_61 = get_fun_ptr(_temp_11)
temp_62 = inject_int(1)
temp_63 = inject_int(2)
temp_64 = get_free_vars(_temp_11)
_temp_12 = temp_61(temp_62,temp_63,temp_64)
print(_temp_12)
temp_65 = inject_int(2)
_temp_13 = get_subscript(_x,temp_65)
temp_66 = get_fun_ptr(_temp_13)
temp_67 = inject_int(1)
temp_68 = inject_int(2)
temp_69 = get_free_vars(_temp_13)
_temp_14 = temp_66(temp_67,temp_68,temp_69)
print(_temp_14)