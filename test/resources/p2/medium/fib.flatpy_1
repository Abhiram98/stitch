def int_comp_eq(a,b):
    return int(a==b)

def int_comp_noteq(a,b):
    return int(a!=b)

inject_int=lambda x: int(x)
inject_big = lambda x: x
inject_bool = lambda x: bool(x)
project_int = lambda x: x
project_big = lambda x: x
project_bool = lambda x: x
is_true = lambda x: x 
is_int = lambda x: type(x) == int
is_bool = lambda x: type(x) == bool
is_big = lambda x: (is_int(x) or is_bool(x)) == False
create_list = lambda x: [1] * x
create_dict = lambda : dict()


def error_pyobj(msg):
    raise Exception("type error")
    

def set_subscript(l, i, v):
    l[i] = v
    return l
    

def get_subscript(l, i):
    return l[i]
    

temp_12 = inject_int(0)
temp_53 = inject_int(1)
temp_54 = create_list(temp_53)
temp_51 = inject_big(temp_54)
temp_55 = inject_int(0)
set_subscript(temp_51,temp_55,temp_12)
_fib = temp_51
temp_13 = inject_int(0)
def __func1(_n,free_vars_1):
	temp_14 = inject_int(0)
	temp_78 = is_int(_n)
	if temp_78:
		temp_57 = is_int(temp_14)
		if temp_57:
			temp_56 = _n == temp_14
			_temp_8 = inject_bool(temp_56)
		
		temp_61 = is_bool(temp_14)
		if temp_61:
			temp_58 = project_int(_n)
			temp_59 = project_bool(temp_14)
			temp_60 = temp_58 == temp_59
			_temp_8 = inject_bool(temp_60)
		
		temp_62 = is_big(temp_14)
		if temp_62:
			_temp_8 = inject_bool(0)
		
	else:
		temp_77 = is_bool(_n)
		if temp_77:
			temp_66 = is_int(temp_14)
			if temp_66:
				temp_63 = project_bool(_n)
				temp_64 = project_int(temp_14)
				temp_65 = temp_63 == temp_64
				_temp_8 = inject_bool(temp_65)
			
			temp_68 = is_bool(temp_14)
			if temp_68:
				temp_67 = _n == temp_14
				_temp_8 = inject_bool(temp_67)
			
			temp_69 = is_big(temp_14)
			if temp_69:
				_temp_8 = inject_bool(0)
			
		else:
			temp_76 = is_big(_n)
			if temp_76:
				temp_70 = is_int(temp_14)
				if temp_70:
					_temp_8 = inject_bool(0)
				
				temp_71 = is_bool(temp_14)
				if temp_71:
					_temp_8 = inject_bool(0)
				
				temp_75 = is_big(temp_14)
				if temp_75:
					temp_72 = project_big(_n)
					temp_73 = project_big(temp_14)
					temp_74 = equal(temp_72,temp_73)
					_temp_8 = inject_bool(temp_74)
				
			
		
	
	_temp_8 = _temp_8
	temp_15 = is_true(_temp_8)
	temp_41 = is_true(temp_15)
	if temp_41:
		_temp_10 = inject_int(0)
	else:
		temp_16 = inject_int(1)
		temp_101 = is_int(_n)
		if temp_101:
			temp_80 = is_int(temp_16)
			if temp_80:
				temp_79 = _n == temp_16
				_temp_6 = inject_bool(temp_79)
			
			temp_84 = is_bool(temp_16)
			if temp_84:
				temp_81 = project_int(_n)
				temp_82 = project_bool(temp_16)
				temp_83 = temp_81 == temp_82
				_temp_6 = inject_bool(temp_83)
			
			temp_85 = is_big(temp_16)
			if temp_85:
				_temp_6 = inject_bool(0)
			
		else:
			temp_100 = is_bool(_n)
			if temp_100:
				temp_89 = is_int(temp_16)
				if temp_89:
					temp_86 = project_bool(_n)
					temp_87 = project_int(temp_16)
					temp_88 = temp_86 == temp_87
					_temp_6 = inject_bool(temp_88)
				
				temp_91 = is_bool(temp_16)
				if temp_91:
					temp_90 = _n == temp_16
					_temp_6 = inject_bool(temp_90)
				
				temp_92 = is_big(temp_16)
				if temp_92:
					_temp_6 = inject_bool(0)
				
			else:
				temp_99 = is_big(_n)
				if temp_99:
					temp_93 = is_int(temp_16)
					if temp_93:
						_temp_6 = inject_bool(0)
					
					temp_94 = is_bool(temp_16)
					if temp_94:
						_temp_6 = inject_bool(0)
					
					temp_98 = is_big(temp_16)
					if temp_98:
						temp_95 = project_big(_n)
						temp_96 = project_big(temp_16)
						temp_97 = equal(temp_95,temp_96)
						_temp_6 = inject_bool(temp_97)
					
				
			
		
		_temp_6 = _temp_6
		temp_17 = is_true(_temp_6)
		temp_40 = is_true(temp_17)
		if temp_40:
			_temp_9 = inject_int(1)
		else:
			temp_18 = inject_int(1)
			_temp_0 = - temp_18
			temp_128 = is_int(_n)
			if temp_128:
				temp_110 = is_int(_temp_0)
				if temp_110:
					temp_102 = project_int(_n)
					temp_103 = project_int(_temp_0)
					temp_104 = temp_102 + temp_103
					_temp_1 = inject_int(temp_104)
				else:
					temp_109 = is_big(_temp_0)
					if temp_109:
						error_pyobj()
					else:
						temp_108 = is_bool(_temp_0)
						if temp_108:
							temp_105 = project_int(_n)
							temp_106 = project_bool(_temp_0)
							temp_107 = temp_105 + temp_106
							_temp_1 = inject_int(temp_107)
						else:
							error_pyobj()
						
					
				
			else:
				temp_127 = is_big(_n)
				if temp_127:
					temp_116 = is_int(_temp_0)
					if temp_116:
						error_pyobj()
					else:
						temp_115 = is_big(_temp_0)
						if temp_115:
							temp_111 = project_big(_n)
							temp_112 = project_big(_temp_0)
							temp_113 = add(temp_111,temp_112)
							_temp_1 = inject_big(temp_113)
						else:
							temp_114 = is_bool(_temp_0)
							if temp_114:
								error_pyobj()
							else:
								error_pyobj()
							
						
					
				else:
					temp_126 = is_bool(_n)
					if temp_126:
						temp_125 = is_int(_temp_0)
						if temp_125:
							temp_117 = project_bool(_n)
							temp_118 = project_int(_temp_0)
							temp_119 = temp_117 + temp_118
							_temp_1 = inject_int(temp_119)
						else:
							temp_124 = is_big(_temp_0)
							if temp_124:
								error_pyobj()
							else:
								temp_123 = is_bool(_temp_0)
								if temp_123:
									temp_120 = project_bool(_n)
									temp_121 = project_bool(_temp_0)
									temp_122 = temp_120 + temp_121
									_temp_1 = inject_bool(temp_122)
								else:
									error_pyobj()
								
							
						
					else:
						error_pyobj()
					
				
			
			_temp_1 = _temp_1
			temp_19 = inject_int(2)
			_temp_2 = - temp_19
			temp_155 = is_int(_n)
			if temp_155:
				temp_137 = is_int(_temp_2)
				if temp_137:
					temp_129 = project_int(_n)
					temp_130 = project_int(_temp_2)
					temp_131 = temp_129 + temp_130
					_temp_3 = inject_int(temp_131)
				else:
					temp_136 = is_big(_temp_2)
					if temp_136:
						error_pyobj()
					else:
						temp_135 = is_bool(_temp_2)
						if temp_135:
							temp_132 = project_int(_n)
							temp_133 = project_bool(_temp_2)
							temp_134 = temp_132 + temp_133
							_temp_3 = inject_int(temp_134)
						else:
							error_pyobj()
						
					
				
			else:
				temp_154 = is_big(_n)
				if temp_154:
					temp_143 = is_int(_temp_2)
					if temp_143:
						error_pyobj()
					else:
						temp_142 = is_big(_temp_2)
						if temp_142:
							temp_138 = project_big(_n)
							temp_139 = project_big(_temp_2)
							temp_140 = add(temp_138,temp_139)
							_temp_3 = inject_big(temp_140)
						else:
							temp_141 = is_bool(_temp_2)
							if temp_141:
								error_pyobj()
							else:
								error_pyobj()
							
						
					
				else:
					temp_153 = is_bool(_n)
					if temp_153:
						temp_152 = is_int(_temp_2)
						if temp_152:
							temp_144 = project_bool(_n)
							temp_145 = project_int(_temp_2)
							temp_146 = temp_144 + temp_145
							_temp_3 = inject_int(temp_146)
						else:
							temp_151 = is_big(_temp_2)
							if temp_151:
								error_pyobj()
							else:
								temp_150 = is_bool(_temp_2)
								if temp_150:
									temp_147 = project_bool(_n)
									temp_148 = project_bool(_temp_2)
									temp_149 = temp_147 + temp_148
									_temp_3 = inject_bool(temp_149)
								else:
									error_pyobj()
								
							
						
					else:
						error_pyobj()
					
				
			
			_temp_3 = _temp_3
			temp_20 = inject_int(0)
			temp_21 = inject_int(0)
			temp_22 = get_subscript(free_vars_1,temp_20)
			temp_23 = get_subscript(temp_22,temp_21)
			temp_24 = inject_int(0)
			temp_25 = inject_int(0)
			temp_26 = get_subscript(free_vars_1,temp_24)
			temp_27 = get_subscript(temp_26,temp_25)
			temp_28 = get_fun_ptr(temp_23)
			temp_29 = get_free_vars(temp_27)
			_temp_4 = temp_28(_temp_1,temp_29)
			temp_30 = inject_int(0)
			temp_31 = inject_int(0)
			temp_32 = get_subscript(free_vars_1,temp_30)
			temp_33 = get_subscript(temp_32,temp_31)
			temp_34 = inject_int(0)
			temp_35 = inject_int(0)
			temp_36 = get_subscript(free_vars_1,temp_34)
			temp_37 = get_subscript(temp_36,temp_35)
			temp_38 = get_fun_ptr(temp_33)
			temp_39 = get_free_vars(temp_37)
			_temp_5 = temp_38(_temp_3,temp_39)
			temp_182 = is_int(_temp_4)
			if temp_182:
				temp_164 = is_int(_temp_5)
				if temp_164:
					temp_156 = project_int(_temp_4)
					temp_157 = project_int(_temp_5)
					temp_158 = temp_156 + temp_157
					_temp_7 = inject_int(temp_158)
				else:
					temp_163 = is_big(_temp_5)
					if temp_163:
						error_pyobj()
					else:
						temp_162 = is_bool(_temp_5)
						if temp_162:
							temp_159 = project_int(_temp_4)
							temp_160 = project_bool(_temp_5)
							temp_161 = temp_159 + temp_160
							_temp_7 = inject_int(temp_161)
						else:
							error_pyobj()
						
					
				
			else:
				temp_181 = is_big(_temp_4)
				if temp_181:
					temp_170 = is_int(_temp_5)
					if temp_170:
						error_pyobj()
					else:
						temp_169 = is_big(_temp_5)
						if temp_169:
							temp_165 = project_big(_temp_4)
							temp_166 = project_big(_temp_5)
							temp_167 = add(temp_165,temp_166)
							_temp_7 = inject_big(temp_167)
						else:
							temp_168 = is_bool(_temp_5)
							if temp_168:
								error_pyobj()
							else:
								error_pyobj()
							
						
					
				else:
					temp_180 = is_bool(_temp_4)
					if temp_180:
						temp_179 = is_int(_temp_5)
						if temp_179:
							temp_171 = project_bool(_temp_4)
							temp_172 = project_int(_temp_5)
							temp_173 = temp_171 + temp_172
							_temp_7 = inject_int(temp_173)
						else:
							temp_178 = is_big(_temp_5)
							if temp_178:
								error_pyobj()
							else:
								temp_177 = is_bool(_temp_5)
								if temp_177:
									temp_174 = project_bool(_temp_4)
									temp_175 = project_bool(_temp_5)
									temp_176 = temp_174 + temp_175
									_temp_7 = inject_bool(temp_176)
								else:
									error_pyobj()
								
							
						
					else:
						error_pyobj()
					
				
			
			_temp_7 = _temp_7
			_temp_9 = _temp_7
		
		_temp_10 = _temp_9
	
	return _temp_10

temp_183 = inject_int(1)
temp_184 = create_list(temp_183)
temp_52 = inject_big(temp_184)
temp_185 = inject_int(0)
set_subscript(temp_52,temp_185,_fib)
temp_42 = temp_52
temp_43 = create_closure(__func1,temp_42)
temp_186 = inject_big(temp_43)
set_subscript(_fib,temp_13,temp_186)
temp_44 = inject_int(0)
temp_45 = get_subscript(_fib,temp_44)
temp_46 = inject_int(0)
temp_47 = get_subscript(_fib,temp_46)
temp_48 = get_fun_ptr(temp_45)
temp_49 = inject_int(6)
temp_50 = get_free_vars(temp_47)
_temp_11 = temp_48(temp_49,temp_50)
print(_temp_11)